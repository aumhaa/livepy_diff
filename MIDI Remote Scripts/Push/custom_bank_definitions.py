
from __future__ import absolute_import, print_function
from ableton.v2.base.collection import IndexedDict
from pushbase.parameter_slot_description import use
from pushbase.banking_util import PARAMETERS_KEY, MAIN_KEY
RACK_BANKS = IndexedDict((('Macros', {PARAMETERS_KEY: ('Macro 1',
                    'Macro 2',
                    'Macro 3',
                    'Macro 4',
                    'Macro 5',
                    'Macro 6',
                    'Macro 7',
                    'Macro 8')}),))
BANK_DEFINITIONS = {'AudioEffectGroupDevice': RACK_BANKS,
 'MidiEffectGroupDevice': RACK_BANKS,
 'InstrumentGroupDevice': RACK_BANKS,
 'DrumGroupDevice': RACK_BANKS,
 'UltraAnalog': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('OSC1 Shape').if_parameter('OSC1 On/Off').has_value('on').else_use('OSC2 Shape').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('OSC1 Octave').if_parameter('OSC1 On/Off').has_value('on').else_use('OSC2 Octave').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('OSC2 Shape').if_parameter('OSC1 On/Off').has_value('on').and_parameter('OSC2 On/Off').has_value('on').else_use('OSC1 Semi').if_parameter('OSC1 On/Off').has_value('on').else_use('OSC2 Semi').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('OSC2 Octave').if_parameter('OSC1 On/Off').has_value('on').and_parameter('OSC2 On/Off').has_value('on').else_use('OSC1 Detune').if_parameter('OSC1 On/Off').has_value('on').else_use('OSC2 Detune').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('F1 Type').if_parameter('F1 On/Off').has_value('on').else_use('F2 Type').if_parameter('F2 On/Off').has_value('on'),
                                    use('F1 Freq').if_parameter('F1 On/Off').has_value('on').else_use('F2 Freq').if_parameter('F2 On/Off').has_value('on'),
                                    use('F1 Resonance').if_parameter('F1 On/Off').has_value('on').else_use('F2 Resonance').if_parameter('F2 On/Off').has_value('on'),
                                    'Volume')}),
                 ('Osc. 1 Shape', {PARAMETERS_KEY: ('OSC1 On/Off',
                                    use('OSC1 Shape').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('').if_parameter('OSC1 On/Off').has_value('off').else_use('OSC1 PW').if_parameter('OSC1 Shape').has_value('Rect'),
                                    use('').if_parameter('OSC1 On/Off').has_value('off').else_use('O1 PW < LFO').if_parameter('OSC1 Shape').has_value('Rect').else_use('').if_parameter('LFO1 On/Off').has_value('off'),
                                    use('').if_parameter('OSC1 On/Off').has_value('off').else_use('').if_parameter('OSC1 Shape').has_value('Noise').else_use('').if_parameter('OSC1 Shape').has_value('Sine').else_use('OSC1 Mode'),
                                    use('').if_parameter('OSC1 On/Off').has_value('off').else_use('').if_parameter('OSC1 Shape').has_value('Noise').else_use('O1 Sub/Sync'),
                                    use('OSC1 Balance').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('OSC1 Level').if_parameter('OSC1 On/Off').has_value('on'))}),
                 ('Osc. 1 Pitch', {PARAMETERS_KEY: ('OSC1 On/Off',
                                    use('OSC1 Octave').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('OSC1 Semi').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('OSC1 Detune').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('PEG1 Amount').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('PEG1 Time').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('O1 Keytrack').if_parameter('OSC1 On/Off').has_value('on'),
                                    use('').if_parameter('OSC1 On/Off').has_value('off').else_use('').if_parameter('LFO1 On/Off').has_value('off').else_use('OSC1 < LFO'))}),
                 ('Osc. 2 Shape', {PARAMETERS_KEY: ('OSC2 On/Off',
                                    use('OSC2 Shape').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('').if_parameter('OSC2 On/Off').has_value('off').else_use('OSC2 PW').if_parameter('OSC2 Shape').has_value('Rect'),
                                    use('').if_parameter('OSC2 On/Off').has_value('off').else_use('O2 PW < LFO').if_parameter('OSC2 Shape').has_value('Rect').else_use('').if_parameter('LFO2 On/Off').has_value('off'),
                                    use('').if_parameter('OSC2 On/Off').has_value('off').else_use('').if_parameter('OSC2 Shape').has_value('Noise').else_use('').if_parameter('OSC2 Shape').has_value('Sine').else_use('OSC2 Mode'),
                                    use('').if_parameter('OSC2 On/Off').has_value('off').else_use('').if_parameter('OSC2 Shape').has_value('Noise').else_use('O2 Sub/Sync'),
                                    use('OSC2 Balance').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('OSC2 Level').if_parameter('OSC2 On/Off').has_value('on'))}),
                 ('Osc. 2 Pitch', {PARAMETERS_KEY: ('OSC2 On/Off',
                                    use('OSC2 Octave').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('OSC2 Semi').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('OSC2 Detune').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('PEG2 Amount').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('PEG2 Time').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('O2 Keytrack').if_parameter('OSC2 On/Off').has_value('on'),
                                    use('').if_parameter('OSC2 On/Off').has_value('off').else_use('').if_parameter('LFO2 On/Off').has_value('off').else_use('OSC2 < LFO'))}),
                 ('Filters', {PARAMETERS_KEY: ('F1 On/Off',
                                    use('F1 Type').if_parameter('F1 On/Off').has_value('on'),
                                    use('F1 Freq').if_parameter('F1 On/Off').has_value('on'),
                                    use('F1 Resonance').if_parameter('F1 On/Off').has_value('on'),
                                    'F2 On/Off',
                                    use('F2 Type').if_parameter('F2 On/Off').has_value('on'),
                                    use('F2 Freq').if_parameter('F2 On/Off').has_value('on'),
                                    use('F2 Resonance').if_parameter('F2 On/Off').has_value('on'))}),
                 ('Filt. 1 Env.', {PARAMETERS_KEY: ('F1 On/Off',
                                    use('FEG1 < Vel').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG1 A < Vel').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG1 Attack').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG1 Decay').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG1 Sustain').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG1 S Time').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG1 Rel').if_parameter('F1 On/Off').has_value('on'))}),
                 ('Filt. 2 Env.', {PARAMETERS_KEY: ('F2 On/Off',
                                    use('FEG2 < Vel').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG2 A < Vel').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG2 Attack').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG2 Decay').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG2 Sustain').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG2 S Time').if_parameter('F1 On/Off').has_value('on'),
                                    use('FEG2 Rel').if_parameter('F1 On/Off').has_value('on'))}),
                 ('Filt. Modulation', {PARAMETERS_KEY: ('F1 On/Off',
                                    use('F1 Freq < LFO').if_parameter('F1 On/Off').has_value('on'),
                                    use('F1 Freq < Env').if_parameter('F1 On/Off').has_value('on'),
                                    use('F1 Res < LFO').if_parameter('F1 On/Off').has_value('on'),
                                    'F2 On/Off',
                                    use('F2 Freq < LFO').if_parameter('F2 On/Off').has_value('on'),
                                    use('F2 Freq < Env').if_parameter('F2 On/Off').has_value('on'),
                                    use('F2 Res < LFO').if_parameter('F2 On/Off').has_value('on'))}),
                 ('Amp', {PARAMETERS_KEY: (use('AMP1 Level').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AMP1 Pan').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AMP1 < LFO').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('').if_parameter('LFO1 On/Off').has_value('off').else_use('LFO1 Speed').if_parameter('LFO1 Sync').has_value('Hertz').else_use('LFO1 SncRate'),
                                    use('AMP2 Level').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AMP2 Pan').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AMP2 < LFO').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('').if_parameter('LFO2 On/Off').has_value('off').else_use('LFO2 Speed').if_parameter('LFO2 Sync').has_value('Hertz').else_use('LFO2 SncRate'))}),
                 ('Amp 1 Envelope', {PARAMETERS_KEY: ('AMP1 On/Off',
                                    use('AEG1 < Vel').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AEG1 A < Vel').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AEG1 Attack').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AEG1 Decay').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AEG1 Sustain').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AEG1 S Time').if_parameter('AMP1 On/Off').has_value('on'),
                                    use('AEG1 Rel').if_parameter('AMP1 On/Off').has_value('on'))}),
                 ('Amp 2 Envelope', {PARAMETERS_KEY: ('AMP2 On/Off',
                                    use('AEG2 < Vel').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AEG2 A < Vel').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AEG2 Attack').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AEG2 Decay').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AEG2 Sustain').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AEG2 S Time').if_parameter('AMP2 On/Off').has_value('on'),
                                    use('AEG2 Rel').if_parameter('AMP2 On/Off').has_value('on'))}),
                 ('Noise & Unison', {PARAMETERS_KEY: ('Noise On/Off',
                                    use('Noise Level').if_parameter('Noise On/Off').has_value('on'),
                                    use('Noise Color').if_parameter('Noise On/Off').has_value('on'),
                                    use('Noise Balance').if_parameter('Noise On/Off').has_value('on'),
                                    'Unison On/Off',
                                    use('Unison Detune').if_parameter('Unison On/Off').has_value('on'),
                                    use('Unison Delay').if_parameter('Unison On/Off').has_value('on'),
                                    '')}),
                 ('Performance', {PARAMETERS_KEY: ('Glide On/Off',
                                    use('Glide Time').if_parameter('Glide On/Off').has_value('on'),
                                    use('Glide Mode').if_parameter('Glide On/Off').has_value('on'),
                                    use('Glide Legato').if_parameter('Glide On/Off').has_value('on'),
                                    'PB Range',
                                    'Key Stretch',
                                    'Key Error',
                                    'Voices')}),
                 ('LFO 1', {PARAMETERS_KEY: ('LFO1 On/Off',
                                    use('LFO1 Sync').if_parameter('LFO1 On/Off').has_value('on'),
                                    use('').if_parameter('LFO1 On/Off').has_value('off').else_use('LFO1 Speed').if_parameter('LFO1 Sync').has_value('Hertz').else_use('LFO1 SncRate'),
                                    use('LFO1 Shape').if_parameter('LFO1 On/Off').has_value('on'),
                                    use('').if_parameter('LFO1 On/Off').has_value('off').else_use('LFO1 PW').if_parameter('LFO1 Shape').has_value('Rect').else_use('LFO1 PW').if_parameter('LFO1 Shape').has_value('Tri'),
                                    use('LFO1 Phase').if_parameter('LFO1 On/Off').has_value('on'),
                                    use('LFO1 Delay').if_parameter('LFO1 On/Off').has_value('on'),
                                    use('LFO1 Fade In').if_parameter('LFO1 On/Off').has_value('on'))}),
                 ('LFO 2', {PARAMETERS_KEY: ('LFO2 On/Off',
                                    use('LFO2 Sync').if_parameter('LFO2 On/Off').has_value('on'),
                                    use('').if_parameter('LFO2 On/Off').has_value('off').else_use('LFO2 Speed').if_parameter('LFO2 Sync').has_value('Hertz').else_use('LFO2 SncRate'),
                                    use('LFO2 Shape').if_parameter('LFO2 On/Off').has_value('on'),
                                    use('').if_parameter('LFO2 On/Off').has_value('off').else_use('LFO2 PW').if_parameter('LFO2 Shape').has_value('Rect').else_use('LFO2 PW').if_parameter('LFO2 Shape').has_value('Tri'),
                                    use('LFO2 Phase').if_parameter('LFO2 On/Off').has_value('on'),
                                    use('LFO2 Delay').if_parameter('LFO2 On/Off').has_value('on'),
                                    use('LFO2 Fade In').if_parameter('LFO2 On/Off').has_value('on'))}),
                 ('Vibrato', {PARAMETERS_KEY: ('Vib On/Off',
                                    use('Vib Amount').if_parameter('Vib On/Off').has_value('on'),
                                    use('Vib Speed').if_parameter('Vib On/Off').has_value('on'),
                                    use('Vib Delay').if_parameter('Vib On/Off').has_value('on'),
                                    use('Vib Fade-In').if_parameter('Vib On/Off').has_value('on'),
                                    use('Vib Error').if_parameter('Vib On/Off').has_value('on'),
                                    use('Vib < ModWh').if_parameter('Vib On/Off').has_value('on'),
                                    '')}))),
 'Collision': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Res 1 Type').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Brightness'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('Res 1 Opening').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Inharmonics'),
                                  use('Res 1 Decay').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('Res 1 Radius').if_parameter('Res 1 Type').has_value('Tube').else_use('Res 1 Radius').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Material'),
                                  use('Mallet Stiffness').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Noise Amount').if_parameter('Mallet On/Off').has_value('on'),
                                  'Volume')}),
               ('Mix', {PARAMETERS_KEY: (use('Res 1 Volume').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('Panorama').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('Res 1 Bleed').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('Res 2 Volume').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('Res 2 Panorama').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('Res 2 Bleed').if_parameter('Res 2 On/Off').has_value('on'),
                                  'Structure',
                                  'Volume')}),
               ('Mallet', {PARAMETERS_KEY: ('Mallet On/Off',
                                  use('Mallet Volume').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Noise Amount').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Stiffness').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Noise Color').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Modulation').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Volume < Vel').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Noise Amount < Vel').if_parameter('Mallet On/Off').has_value('on'))}),
               ('Noise Envelope', {PARAMETERS_KEY: ('Noise On/Off',
                                  use('Noise Volume').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Volume < Key').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Volume < Vel').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Attack').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Sustain').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Decay').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Release').if_parameter('Noise On/Off').has_value('on'))}),
               ('Noise Filter', {PARAMETERS_KEY: ('Noise On/Off',
                                  use('Noise Volume').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Filter Type').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Filter Freq').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Filter Q').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Freq < Key').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Freq < Vel').if_parameter('Noise On/Off').has_value('on'),
                                  use('Noise Freq < Env').if_parameter('Noise On/Off').has_value('on'))}),
               ('Res. 1 Body', {PARAMETERS_KEY: ('Res 1 On/Off',
                                  use('Res 1 Type').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('Res 1 Ratio').if_parameter('Res 1 Type').has_value('Plate').else_use('Res 1 Ratio').if_parameter('Res 1 Type').has_value('Membrane'),
                                  use('Res 1 Decay').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('Res 1 Radius').if_parameter('Res 1 Type').has_value('Tube').else_use('Res 1 Radius').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Material'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Listening L'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Listening R'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Hit'))}),
               ('Res. 1 Tune', {PARAMETERS_KEY: ('Res 1 On/Off',
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Brightness'),
                                  use('Res 1 Quality').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('').if_parameter('Res 1 On/Off').has_value('off').else_use('').if_parameter('Res 1 Type').has_value('Tube').else_use('Res 1 Opening').if_parameter('Res 1 Type').has_value('Pipe').else_use('Res 1 Inharmonics'),
                                  use('Res 1 Tune').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('Res 1 Fine Tune').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('Res 1 Pitch Env.').if_parameter('Res 1 On/Off').has_value('on'),
                                  use('Res 1 Pitch Env. Time').if_parameter('Res 1 On/Off').has_value('on'))}),
               ('Res. 2 Body', {PARAMETERS_KEY: ('Res 2 On/Off',
                                  use('Res 2 Type').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('Res 2 Ratio').if_parameter('Res 2 Type').has_value('Plate').else_use('Res 2 Ratio').if_parameter('Res 2 Type').has_value('Membrane'),
                                  use('Res 2 Decay').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('Res 2 Radius').if_parameter('Res 2 Type').has_value('Tube').else_use('Res 2 Radius').if_parameter('Res 2 Type').has_value('Pipe').else_use('Res 2 Material'),
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('').if_parameter('Res 2 Type').has_value('Tube').else_use('').if_parameter('Res 2 Type').has_value('Pipe').else_use('Res 2 Listening L'),
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('').if_parameter('Res 2 Type').has_value('Tube').else_use('').if_parameter('Res 2 Type').has_value('Pipe').else_use('Res 2 Listening R'),
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('').if_parameter('Res 2 Type').has_value('Tube').else_use('').if_parameter('Res 2 Type').has_value('Pipe').else_use('Res 2 Hit'))}),
               ('Res. 2 Tune', {PARAMETERS_KEY: ('Res 2 On/Off',
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('').if_parameter('Res 2 Type').has_value('Tube').else_use('').if_parameter('Res 2 Type').has_value('Pipe').else_use('Res 2 Brightness'),
                                  use('Res 2 Quality').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('').if_parameter('Res 2 On/Off').has_value('off').else_use('').if_parameter('Res 2 Type').has_value('Tube').else_use('Res 2 Opening').if_parameter('Res 2 Type').has_value('Pipe').else_use('Res 2 Inharmonics'),
                                  use('Res 2 Tune').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('Res 2 Fine Tune').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('Res 2 Pitch Env.').if_parameter('Res 2 On/Off').has_value('on'),
                                  use('Res 2 Pitch Env. Time').if_parameter('Res 2 On/Off').has_value('on'))}),
               ('LFO 1', {PARAMETERS_KEY: ('LFO 1 On/Off',
                                  use('LFO 1 Depth').if_parameter('LFO 1 On/Off').has_value('on'),
                                  use('LFO 1 Shape').if_parameter('LFO 1 On/Off').has_value('on'),
                                  use('LFO 1 Sync').if_parameter('LFO 1 On/Off').has_value('on'),
                                  use('').if_parameter('LFO 1 On/Off').has_value('off').else_use('LFO 1 Sync Rate').if_parameter('LFO 1 Sync').has_value('Sync').else_use('LFO 1 Rate'),
                                  use('LFO 1 Offset').if_parameter('LFO 1 On/Off').has_value('on'),
                                  use('LFO 1 Destination A').if_parameter('LFO 1 On/Off').has_value('on'),
                                  use('LFO 1 Destination A Amount').if_parameter('LFO 1 On/Off').has_value('on'))}),
               ('LFO 2', {PARAMETERS_KEY: ('LFO 2 On/Off',
                                  use('LFO 2 Depth').if_parameter('LFO 2 On/Off').has_value('on'),
                                  use('LFO 2 Shape').if_parameter('LFO 2 On/Off').has_value('on'),
                                  use('LFO 2 Sync').if_parameter('LFO 2 On/Off').has_value('on'),
                                  use('').if_parameter('LFO 2 On/Off').has_value('off').else_use('LFO 2 Sync Rate').if_parameter('LFO 2 Sync').has_value('Sync').else_use('LFO 2 Rate'),
                                  use('LFO 2 Offset').if_parameter('LFO 2 On/Off').has_value('on'),
                                  use('LFO 2 Destination A').if_parameter('LFO 2 On/Off').has_value('on'),
                                  use('LFO 2 Destination A Amount').if_parameter('LFO 2 On/Off').has_value('on'))}),
               ('Mallet Mod.', {PARAMETERS_KEY: ('Mallet On/Off',
                                  use('Mallet Volume < Key').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Volume < Vel').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Noise Amount < Key').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Noise Amount < Vel').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Stiffness < Key').if_parameter('Mallet On/Off').has_value('on'),
                                  use('Mallet Stiffness < Vel').if_parameter('Mallet On/Off').has_value('on'),
                                  '')}))),
 'LoungeLizard': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('M Stiffness',
                                     'M Force',
                                     'Noise Amount',
                                     'F Tine Vol',
                                     'F Tone Vol',
                                     'F Release',
                                     'P Symmetry',
                                     'Volume')}),
                  ('Mallet', {PARAMETERS_KEY: ('M Stiffness',
                                     'M Force',
                                     'Noise Pitch',
                                     'Noise Decay',
                                     'Noise Amount',
                                     'M Stiff < Vel',
                                     'M Force < Vel',
                                     'Volume')}),
                  ('Fork', {PARAMETERS_KEY: ('F Tine Color',
                                     'F Tine Decay',
                                     'F Tine Vol',
                                     'F Tone Vol',
                                     'F Tone Decay',
                                     'F Release',
                                     'F Tine < Key',
                                     'Volume')}),
                  ('Damper', {PARAMETERS_KEY: ('Damp Tone',
                                     'Damp Balance',
                                     'Damp Amount',
                                     '',
                                     '',
                                     '',
                                     '',
                                     'Volume')}),
                  ('Pickup', {PARAMETERS_KEY: ('P Symmetry',
                                     'P Distance',
                                     'P Amp In',
                                     'P Amp Out',
                                     'Pickup Model',
                                     'P Amp < Key',
                                     '',
                                     'Volume')}),
                  ('Modulation', {PARAMETERS_KEY: ('M Stiff < Vel',
                                     'M Stiff < Key',
                                     'M Force < Vel',
                                     'M Force < Key',
                                     'Noise < Key',
                                     'F Tine < Key',
                                     'P Amp < Key',
                                     'Volume')}),
                  ('Global', {PARAMETERS_KEY: ('KB Stretch',
                                     'PB Range',
                                     '',
                                     '',
                                     'Voices',
                                     'Semitone',
                                     'Detune',
                                     'Volume')}))),
 'InstrumentImpulse': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('1 Transpose',
                                          '1 Volume',
                                          '3 Transpose',
                                          '3 Volume',
                                          '7 Transpose',
                                          '7 Volume',
                                          '8 Transpose',
                                          '8 Volume')}),
                       ('Pad 1', {PARAMETERS_KEY: ('1 Start',
                                          '1 Envelope Decay',
                                          '1 Stretch Factor',
                                          '1 Saturator Drive',
                                          '1 Envelope Type',
                                          '1 Transpose',
                                          '1 Volume <- Vel',
                                          '1 Volume')}),
                       ('1 Filt/Mod/Pan', {PARAMETERS_KEY: ('1 Filter Freq',
                                          '1 Filter Res',
                                          '1 Filter Type',
                                          '1 Filter <- Vel',
                                          '1 Filter <- Random',
                                          '1 Pan',
                                          '1 Pan <- Vel',
                                          '1 Pan <- Random')}),
                       ('Pad 2', {PARAMETERS_KEY: ('2 Start',
                                          '2 Envelope Decay',
                                          '2 Stretch Factor',
                                          '2 Saturator Drive',
                                          '2 Envelope Type',
                                          '2 Transpose',
                                          '2 Volume <- Vel',
                                          '2 Volume')}),
                       ('2 Filt/Mod/Pan', {PARAMETERS_KEY: ('2 Filter Freq',
                                          '2 Filter Res',
                                          '2 Filter Type',
                                          '2 Filter <- Vel',
                                          '2 Filter <- Random',
                                          '2 Pan',
                                          '2 Pan <- Vel',
                                          '2 Pan <- Random')}),
                       ('Pad 3', {PARAMETERS_KEY: ('3 Start',
                                          '3 Envelope Decay',
                                          '3 Stretch Factor',
                                          '3 Saturator Drive',
                                          '3 Envelope Type',
                                          '3 Transpose',
                                          '3 Volume <- Vel',
                                          '3 Volume')}),
                       ('3 Filt/Mod/Pan', {PARAMETERS_KEY: ('3 Filter Freq',
                                          '3 Filter Res',
                                          '3 Filter Type',
                                          '3 Filter <- Vel',
                                          '3 Filter <- Random',
                                          '3 Pan',
                                          '3 Pan <- Vel',
                                          '3 Pan <- Random')}),
                       ('Pad 4', {PARAMETERS_KEY: ('4 Start',
                                          '4 Envelope Decay',
                                          '4 Stretch Factor',
                                          '4 Saturator Drive',
                                          '4 Envelope Type',
                                          '4 Transpose',
                                          '4 Volume <- Vel',
                                          '4 Volume')}),
                       ('4 Filt/Mod/Pan', {PARAMETERS_KEY: ('4 Filter Freq',
                                          '4 Filter Res',
                                          '4 Filter Type',
                                          '4 Filter <- Vel',
                                          '4 Filter <- Random',
                                          '4 Pan',
                                          '4 Pan <- Vel',
                                          '4 Pan <- Random')}),
                       ('Pad 5', {PARAMETERS_KEY: ('5 Start',
                                          '5 Envelope Decay',
                                          '5 Stretch Factor',
                                          '5 Saturator Drive',
                                          '5 Envelope Type',
                                          '5 Transpose',
                                          '5 Volume <- Vel',
                                          '5 Volume')}),
                       ('5 Filt/Mod/Pan', {PARAMETERS_KEY: ('5 Filter Freq',
                                          '5 Filter Res',
                                          '5 Filter Type',
                                          '5 Filter <- Vel',
                                          '5 Filter <- Random',
                                          '5 Pan',
                                          '5 Pan <- Vel',
                                          '5 Pan <- Random')}),
                       ('Pad 6', {PARAMETERS_KEY: ('6 Start',
                                          '6 Envelope Decay',
                                          '6 Stretch Factor',
                                          '6 Saturator Drive',
                                          '6 Envelope Type',
                                          '6 Transpose',
                                          '6 Volume <- Vel',
                                          '6 Volume')}),
                       ('6 Filt/Mod/Pan', {PARAMETERS_KEY: ('6 Filter Freq',
                                          '6 Filter Res',
                                          '6 Filter Type',
                                          '6 Filter <- Vel',
                                          '6 Filter <- Random',
                                          '6 Pan',
                                          '6 Pan <- Vel',
                                          '6 Pan <- Random')}),
                       ('Pad 7', {PARAMETERS_KEY: ('7 Start',
                                          '7 Envelope Decay',
                                          '7 Stretch Factor',
                                          '7 Saturator Drive',
                                          '7 Envelope Type',
                                          '7 Transpose',
                                          '7 Volume <- Vel',
                                          '7 Volume')}),
                       ('7 Filt/Mod/Pan', {PARAMETERS_KEY: ('7 Filter Freq',
                                          '7 Filter Res',
                                          '7 Filter Type',
                                          '7 Filter <- Vel',
                                          '7 Filter <- Random',
                                          '7 Pan',
                                          '7 Pan <- Vel',
                                          '7 Pan <- Random')}),
                       ('Pad 8', {PARAMETERS_KEY: ('8 Start',
                                          '8 Envelope Decay',
                                          '8 Stretch Factor',
                                          '8 Saturator Drive',
                                          '8 Envelope Type',
                                          '8 Transpose',
                                          '8 Volume <- Vel',
                                          '8 Volume')}),
                       ('8 Filt/Mod/Pan', {PARAMETERS_KEY: ('8 Filter Freq',
                                          '8 Filter Res',
                                          '8 Filter Type',
                                          '8 Filter <- Vel',
                                          '8 Filter <- Random',
                                          '8 Pan',
                                          '8 Pan <- Vel',
                                          '8 Pan <- Random')}),
                       ('Global', {PARAMETERS_KEY: ('Global Time',
                                          'Global Transpose',
                                          'Global Volume',
                                          '',
                                          '',
                                          '',
                                          '',
                                          '')}))),
 'Operator': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Algorithm').if_parameter('Filter On').has_value('off').else_use('Filter Freq'),
                                 use('Filter Res (Legacy)').if_parameter('Filter Res').is_available(False).and_parameter('Filter On').has_value('on').else_use('Filter Res').if_parameter('Filter On').has_value('on').else_use('Tone'),
                                 use('').if_parameter('Osc-A On').has_value('off').else_use('A Coarse').if_parameter('A Fix On ').has_value('off').else_use('A Fix Freq'),
                                 use('').if_parameter('Osc-A On').has_value('off').else_use('A Fine').if_parameter('A Fix On ').has_value('off').else_use('A Fix Freq Mul'),
                                 use('').if_parameter('Osc-B On').has_value('off').else_use('B Coarse').if_parameter('B Fix On ').has_value('off').else_use('B Fix Freq'),
                                 use('').if_parameter('Osc-B On').has_value('off').else_use('B Fine').if_parameter('B Fix On ').has_value('off').else_use('B Fix Freq Mul'),
                                 use('Osc-B Level').if_parameter('Osc-B On').has_value('on'),
                                 'Volume')}),
              ('Global', {PARAMETERS_KEY: ('Time',
                                 'Time < Key',
                                 'Tone',
                                 'Algorithm',
                                 'Panorama',
                                 'Pan < Key',
                                 'Pan < Rnd',
                                 'Volume')}),
              ('Osc. A', {PARAMETERS_KEY: ('Osc-A On',
                                 use('Osc-A Level').if_parameter('Osc-A On').has_value('on'),
                                 use('A Fix On ').if_parameter('Osc-A On').has_value('on'),
                                 use('').if_parameter('Osc-A On').has_value('off').else_use('A Coarse').if_parameter('A Fix On ').has_value('off').else_use('A Fix Freq'),
                                 use('').if_parameter('Osc-A On').has_value('off').else_use('A Fine').if_parameter('A Fix On ').has_value('off').else_use('A Fix Freq Mul'),
                                 use('Osc-A Wave').if_parameter('Osc-A On').has_value('on'),
                                 use('Osc-A Retrig').if_parameter('Osc-A On').has_value('on'),
                                 use('').if_parameter('Osc-A On').has_value('off').else_use('Osc-A Phase').if_parameter('Osc-A Retrig').has_value('on'))}),
              ('Osc. A Env.', {PARAMETERS_KEY: ('Osc-A On',
                                 use('Ae Init').if_parameter('Osc-A On').has_value('on'),
                                 use('Ae Attack').if_parameter('Osc-A On').has_value('on'),
                                 use('Ae Peak').if_parameter('Osc-A On').has_value('on'),
                                 use('Ae Decay').if_parameter('Osc-A On').has_value('on'),
                                 use('Ae Sustain').if_parameter('Osc-A On').has_value('on'),
                                 use('Ae Release').if_parameter('Osc-A On').has_value('on'),
                                 use('Osc-A Lev < Vel').if_parameter('Osc-A On').has_value('on'))}),
              ('Osc. B', {PARAMETERS_KEY: ('Osc-B On',
                                 use('Osc-B Level').if_parameter('Osc-B On').has_value('on'),
                                 use('B Fix On ').if_parameter('Osc-B On').has_value('on'),
                                 use('').if_parameter('Osc-B On').has_value('off').else_use('B Coarse').if_parameter('B Fix On ').has_value('off').else_use('B Fix Freq'),
                                 use('').if_parameter('Osc-B On').has_value('off').else_use('B Fine').if_parameter('B Fix On ').has_value('off').else_use('B Fix Freq Mul'),
                                 use('Osc-B Wave').if_parameter('Osc-B On').has_value('on'),
                                 use('Osc-B Retrig').if_parameter('Osc-B On').has_value('on'),
                                 use('').if_parameter('Osc-B On').has_value('off').else_use('Osc-B Phase').if_parameter('Osc-B Retrig').has_value('on'))}),
              ('Osc. B Env.', {PARAMETERS_KEY: ('Osc-B On',
                                 use('Be Init').if_parameter('Osc-B On').has_value('on'),
                                 use('Be Attack').if_parameter('Osc-B On').has_value('on'),
                                 use('Be Peak').if_parameter('Osc-B On').has_value('on'),
                                 use('Be Decay').if_parameter('Osc-B On').has_value('on'),
                                 use('Be Sustain').if_parameter('Osc-B On').has_value('on'),
                                 use('Be Release').if_parameter('Osc-B On').has_value('on'),
                                 use('Osc-B Lev < Vel').if_parameter('Osc-B On').has_value('on'))}),
              ('Osc. C', {PARAMETERS_KEY: ('Osc-C On',
                                 use('Osc-C Level').if_parameter('Osc-C On').has_value('on'),
                                 use('C Fix On ').if_parameter('Osc-C On').has_value('on'),
                                 use('').if_parameter('Osc-C On').has_value('off').else_use('C Coarse').if_parameter('C Fix On ').has_value('off').else_use('C Fix Freq'),
                                 use('').if_parameter('Osc-C On').has_value('off').else_use('C Fine').if_parameter('C Fix On ').has_value('off').else_use('C Fix Freq Mul'),
                                 use('Osc-C Wave').if_parameter('Osc-C On').has_value('on'),
                                 use('Osc-C Retrig').if_parameter('Osc-C On').has_value('on'),
                                 use('').if_parameter('Osc-C On').has_value('off').else_use('Osc-C Phase').if_parameter('Osc-C Retrig').has_value('on'))}),
              ('Osc. C Env.', {PARAMETERS_KEY: ('Osc-C On',
                                 use('Ce Init').if_parameter('Osc-C On').has_value('on'),
                                 use('Ce Attack').if_parameter('Osc-C On').has_value('on'),
                                 use('Ce Peak').if_parameter('Osc-C On').has_value('on'),
                                 use('Ce Decay').if_parameter('Osc-C On').has_value('on'),
                                 use('Ce Sustain').if_parameter('Osc-C On').has_value('on'),
                                 use('Ce Release').if_parameter('Osc-C On').has_value('on'),
                                 use('Osc-C Lev < Vel').if_parameter('Osc-C On').has_value('on'))}),
              ('Osc. D', {PARAMETERS_KEY: ('Osc-D On',
                                 use('Osc-D Level').if_parameter('Osc-D On').has_value('on'),
                                 use('D Fix On ').if_parameter('Osc-D On').has_value('on'),
                                 use('').if_parameter('Osc-D On').has_value('off').else_use('D Coarse').if_parameter('D Fix On ').has_value('off').else_use('D Fix Freq'),
                                 use('').if_parameter('Osc-D On').has_value('off').else_use('D Fine').if_parameter('D Fix On ').has_value('off').else_use('D Fix Freq Mul'),
                                 use('Osc-D Wave').if_parameter('Osc-D On').has_value('on'),
                                 use('Osc-D Retrig').if_parameter('Osc-D On').has_value('on'),
                                 use('').if_parameter('Osc-D On').has_value('off').else_use('Osc-D Phase').if_parameter('Osc-D Retrig').has_value('on'))}),
              ('Osc. D Env.', {PARAMETERS_KEY: ('Osc-D On',
                                 use('De Init').if_parameter('Osc-D On').has_value('on'),
                                 use('De Attack').if_parameter('Osc-D On').has_value('on'),
                                 use('De Peak').if_parameter('Osc-D On').has_value('on'),
                                 use('De Decay').if_parameter('Osc-D On').has_value('on'),
                                 use('De Sustain').if_parameter('Osc-D On').has_value('on'),
                                 use('De Release').if_parameter('Osc-D On').has_value('on'),
                                 use('Osc-D Lev < Vel').if_parameter('Osc-D On').has_value('on'))}),
              ('Filter', {PARAMETERS_KEY: ('Filter On',
                                 use('').if_parameter('Filter On').has_value('off').else_use('Filter Type').if_parameter('Filter Type').is_available(True).else_use('Filter Type (Legacy)'),
                                 use('Filter Freq').if_parameter('Filter On').has_value('on'),
                                 use('').if_parameter('Filter On').has_value('off').else_use('Filter Res').if_parameter('Filter Res').is_available(True).else_use('Filter Res (Legacy)'),
                                 use('').if_parameter('Filter On').has_value('off').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Lowpass').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Highpass').else_use('Filter Circuit - BP/NO/Morph'),
                                 use('').if_parameter('Filter On').has_value('off').else_use('Filter Morph').if_parameter('Filter Type').has_value('Morph').else_use('').if_parameter('Filter Type').has_value('Lowpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Highpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Bandpass').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Notch').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('Filter Drive'),
                                 use('Filter Slope').if_parameter('Filter On').has_value('on').and_parameter('Filter Slope').is_available(True),
                                 use('Filt < Vel').if_parameter('Filter On').has_value('on'))}),
              ('Filt. Env.', {PARAMETERS_KEY: (use('Fe Amount').if_parameter('Filter On').has_value('on'),
                                 use('Fe Init').if_parameter('Filter On').has_value('on'),
                                 use('Fe Attack').if_parameter('Filter On').has_value('on'),
                                 use('Fe Peak').if_parameter('Filter On').has_value('on'),
                                 use('Fe Decay').if_parameter('Filter On').has_value('on'),
                                 use('Fe Sustain').if_parameter('Filter On').has_value('on'),
                                 use('Fe Release').if_parameter('Filter On').has_value('on'),
                                 use('Fe End').if_parameter('Filter On').has_value('on'))}),
              ('LFO', {PARAMETERS_KEY: ('LFO On',
                                 use('LFO Type').if_parameter('LFO On').has_value('on'),
                                 use('LFO Range').if_parameter('LFO On').has_value('on'),
                                 use('').if_parameter('LFO On').has_value('off').else_use('LFO Sync').if_parameter('LFO Range').has_value('Sync').else_use('LFO Rate'),
                                 use('LFO Retrigger').if_parameter('LFO On').has_value('on'),
                                 use('LFO Amt').if_parameter('LFO On').has_value('on'),
                                 '',
                                 '')}),
              ('LFO Env.', {PARAMETERS_KEY: ('LFO On',
                                 use('Le Init').if_parameter('LFO On').has_value('on'),
                                 use('Le Attack').if_parameter('LFO On').has_value('on'),
                                 use('Le Peak').if_parameter('LFO On').has_value('on'),
                                 use('Le Decay').if_parameter('LFO On').has_value('on'),
                                 use('Le Sustain').if_parameter('LFO On').has_value('on'),
                                 use('Le Release').if_parameter('LFO On').has_value('on'),
                                 use('Le End').if_parameter('LFO On').has_value('on'))}),
              ('Pitch', {PARAMETERS_KEY: ('Transpose',
                                 'Spread',
                                 'Glide On',
                                 use('Glide Time').if_parameter('Glide On').has_value('on'),
                                 'Pe On',
                                 use('Pe Amount').if_parameter('Pe On').has_value('on'),
                                 use('LFO < Pe').if_parameter('Pe On').has_value('on'),
                                 use('Pe Dst B').if_parameter('Pe On').has_value('on'))}),
              ('Pitch Env.', {PARAMETERS_KEY: ('Pe On',
                                 use('Pe Attack').if_parameter('Pe On').has_value('on'),
                                 use('Pe Peak').if_parameter('Pe On').has_value('on'),
                                 use('Pe Decay').if_parameter('Pe On').has_value('on'),
                                 use('Pe Sustain').if_parameter('Pe On').has_value('on'),
                                 use('Pe Release').if_parameter('Pe On').has_value('on'),
                                 use('Pe End').if_parameter('Pe On').has_value('on'),
                                 use('Pe R < Vel').if_parameter('Pe On').has_value('on'))}))),
 'MultiSampler': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Ve Attack',
                                     'Ve Decay',
                                     'Ve Sustain',
                                     'Ve Release',
                                     use('Pan').if_parameter('F On').has_value('off').else_use('Filter Type').if_parameter('Filter Type').is_available(True).else_use('Filter Type (Legacy)'),
                                     use('Transpose').if_parameter('F On').has_value('off').else_use('Filter Freq'),
                                     use('Detune').if_parameter('F On').has_value('off').else_use('Filter Res').if_parameter('Filter Res').is_available(True).else_use('Filter Res (Legacy)'),
                                     'Volume')}),
                  ('Volume Env.', {PARAMETERS_KEY: ('Ve Init',
                                     'Ve Attack',
                                     'Ve Peak',
                                     'Ve Decay',
                                     'Ve Sustain',
                                     'Ve Release',
                                     'Vol < Vel',
                                     'Volume')}),
                  ('Env. Loop & Pan', {PARAMETERS_KEY: ('Ve Mode',
                                     use('Ve Loop').if_parameter('Ve Mode').has_value('Loop').else_use('Ve Retrig').if_parameter('Ve Mode').has_value('Beat').else_use('Ve Retrig').if_parameter('Ve Mode').has_value('Sync').else_use(''),
                                     'Ve R < Vel',
                                     '',
                                     'Pan',
                                     'Pan < Rnd',
                                     'Time',
                                     'Time < Key')}),
                  ('Filter', {PARAMETERS_KEY: ('F On',
                                     use('').if_parameter('F On').has_value('off').else_use('Filter Type').if_parameter('Filter Type').is_available(True).else_use('Filter Type (Legacy)'),
                                     use('').if_parameter('F On').has_value('off').else_use('Filter Freq'),
                                     use('').if_parameter('F On').has_value('off').else_use('Filter Res').if_parameter('Filter Res').is_available(True).else_use('Filter Res (Legacy)'),
                                     use('').if_parameter('F On').has_value('off').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Lowpass').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Highpass').else_use('Filter Circuit - BP/NO/Morph'),
                                     use('').if_parameter('F On').has_value('off').else_use('Filter Morph').if_parameter('Filter Type').has_value('Morph').else_use('').if_parameter('Filter Type').has_value('Lowpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Highpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Bandpass').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Notch').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('Filter Drive'),
                                     use('Filter Slope').if_parameter('F On').has_value('on').and_parameter('Filter Slope').is_available(True),
                                     use('Filt < Vel').if_parameter('F On').has_value('on'))}),
                  ('Filt. Env', {PARAMETERS_KEY: ('Fe On',
                                     use('Fe < Env').if_parameter('Fe On').has_value('on'),
                                     use('Fe Init').if_parameter('Fe On').has_value('on'),
                                     use('Fe Attack').if_parameter('Fe On').has_value('on'),
                                     use('Fe Decay').if_parameter('Fe On').has_value('on'),
                                     use('Fe Peak').if_parameter('Fe On').has_value('on'),
                                     use('Fe Sustain').if_parameter('Fe On').has_value('on'),
                                     use('Fe Release').if_parameter('Fe On').has_value('on'))}),
                  ('Shaper', {PARAMETERS_KEY: ('Fe On',
                                     use('Fe End').if_parameter('Fe On').has_value('on'),
                                     use('Fe Mode').if_parameter('Fe On').has_value('on'),
                                     use('').if_parameter('Fe On').has_value('off').else_use('Fe Loop').if_parameter('Fe Mode').has_value('Loop').else_use('Fe Retrig').if_parameter('Fe Mode').has_value('Beat').else_use('Fe Retrig').if_parameter('Fe Mode').has_value('Sync').else_use(''),
                                     use('Fe R < Vel').if_parameter('Fe On').has_value('on'),
                                     'Shaper On',
                                     use('Shaper Type').if_parameter('Shaper On').has_value('on'),
                                     use('Shaper Amt').if_parameter('Shaper On').has_value('on'))}),
                  ('Osc. pg. 1', {PARAMETERS_KEY: ('Osc On',
                                     use('O Mode').if_parameter('Osc On').has_value('on'),
                                     use('Oe Init').if_parameter('Osc On').has_value('on'),
                                     use('Oe Attack').if_parameter('Osc On').has_value('on'),
                                     use('Oe Peak').if_parameter('Osc On').has_value('on'),
                                     use('Oe Decay').if_parameter('Osc On').has_value('on'),
                                     use('Oe Sustain').if_parameter('Osc On').has_value('on'),
                                     use('Oe Release').if_parameter('Osc On').has_value('on'))}),
                  ('Osc. pg. 2', {PARAMETERS_KEY: (use('Oe End').if_parameter('Osc On').has_value('on'),
                                     use('Oe Mode').if_parameter('Osc On').has_value('on'),
                                     use('').if_parameter('Osc On').has_value('off').else_use('Oe Loop').if_parameter('Oe Mode').has_value('Loop').else_use('Oe Retrig').if_parameter('Oe Mode').has_value('Beat').else_use('Oe Retrig').if_parameter('Oe Mode').has_value('Sync').else_use(''),
                                     use('O Type').if_parameter('Osc On').has_value('on'),
                                     use('O Volume').if_parameter('Osc On').has_value('on'),
                                     use('O Fix On').if_parameter('Osc On').has_value('on'),
                                     use('').if_parameter('Osc On').has_value('off').else_use('O Coarse').if_parameter('O Fix On').has_value('off').else_use('O Fix Freq'),
                                     use('').if_parameter('Osc On').has_value('off').else_use('O Fine').if_parameter('O Fix On').has_value('off').else_use('O Fix Freq Mul'))}),
                  ('Pitch Env.', {PARAMETERS_KEY: ('Pe On',
                                     use('Pe < Env').if_parameter('Pe On').has_value('on'),
                                     use('Pe Init').if_parameter('Pe On').has_value('on'),
                                     use('Pe Attack').if_parameter('Pe On').has_value('on'),
                                     use('Pe Peak').if_parameter('Pe On').has_value('on'),
                                     use('Pe Decay').if_parameter('Pe On').has_value('on'),
                                     use('Pe Sustain').if_parameter('Pe On').has_value('on'),
                                     use('Pe Release').if_parameter('Pe On').has_value('on'))}),
                  ('Pitch Env. 2', {PARAMETERS_KEY: ('Pe On',
                                     use('Pe End').if_parameter('Pe On').has_value('on'),
                                     use('Pe R < Vel').if_parameter('Pe On').has_value('on'),
                                     use('Pe Mode').if_parameter('Pe On').has_value('on'),
                                     use('').if_parameter('Pe On').has_value('off').else_use('Pe Loop').if_parameter('Pe Mode').has_value('Loop').else_use('Pe Retrig').if_parameter('Pe Mode').has_value('Beat').else_use('Pe Retrig').if_parameter('Pe Mode').has_value('Sync').else_use(''),
                                     '',
                                     '',
                                     '')}),
                  ('Pitch/Glide', {PARAMETERS_KEY: ('Pe On',
                                     'Spread',
                                     'Transpose',
                                     'Detune',
                                     'Key Zone Shift',
                                     'Glide Mode',
                                     use('Glide Time').if_parameter('Glide Mode').has_value('On'),
                                     '')}),
                  ('LFO1 pg. 1', {PARAMETERS_KEY: ('L 1 On',
                                     use('L 1 Wave').if_parameter('L 1 On').has_value('on'),
                                     use('L 1 Sync').if_parameter('L 1 On').has_value('on'),
                                     use('').if_parameter('L 1 On').has_value('off').else_use('L 1 Sync Rate').if_parameter('L 1 Sync').has_value('Sync').else_use('L 1 Rate'),
                                     use('Vol < LFO').if_parameter('L 1 On').has_value('on'),
                                     use('Filt < LFO').if_parameter('L 1 On').has_value('on'),
                                     use('Pan < LFO').if_parameter('L 1 On').has_value('on'),
                                     use('Pitch < LFO').if_parameter('L 1 On').has_value('on'))}),
                  ('LFO1 pg. 2', {PARAMETERS_KEY: ('L 1 On',
                                     use('L 1 Retrig').if_parameter('L 1 On').has_value('on'),
                                     use('').if_parameter('L 1 On').has_value('off').else_use('L 1 Offset').if_parameter('L 1 Retrig').has_value('on').else_use(''),
                                     use('L 1 Attack').if_parameter('L 1 On').has_value('on'),
                                     '',
                                     '',
                                     '',
                                     '')}),
                  ('LFO2 pg. 1', {PARAMETERS_KEY: ('L 2 On',
                                     use('L 2 Wave').if_parameter('L 2 On').has_value('on'),
                                     use('L 2 Sync').if_parameter('L 2 On').has_value('on'),
                                     use('').if_parameter('L 2 On').has_value('off').else_use('L 2 Sync Rate').if_parameter('L 2 Sync').has_value('Sync').else_use('L 2 Rate'),
                                     use('L 2 Retrig').if_parameter('L 2 On').has_value('on'),
                                     use('').if_parameter('L 2 On').has_value('off').else_use('L 2 Offset').if_parameter('L 2 Retrig').has_value('on').else_use(''),
                                     use('L 2 Attack').if_parameter('L 2 On').has_value('on'),
                                     '')}),
                  ('LFO2 pg. 2', {PARAMETERS_KEY: ('L 2 On',
                                     use('L 2 St Mode').if_parameter('L 2 On').has_value('on'),
                                     use('').if_parameter('L 2 On').has_value('off').else_use('L 2 Spin').if_parameter('L 2 St Mode').has_value('Spin').else_use('L 2 Phase'),
                                     '',
                                     '',
                                     '',
                                     '',
                                     '')}),
                  ('LFO3 pg. 1', {PARAMETERS_KEY: ('L 3 On',
                                     use('L 3 Wave').if_parameter('L 3 On').has_value('on'),
                                     use('L 3 Sync').if_parameter('L 3 On').has_value('on'),
                                     use('').if_parameter('L 3 On').has_value('off').else_use('L 3 Sync Rate').if_parameter('L 3 Sync').has_value('Sync').else_use('L 3 Rate'),
                                     use('L 3 Retrig').if_parameter('L 3 On').has_value('on'),
                                     use('').if_parameter('L 3 On').has_value('off').else_use('L 3 Offset').if_parameter('L 3 Retrig').has_value('on').else_use(''),
                                     use('L 3 Attack').if_parameter('L 3 On').has_value('on'),
                                     '')}),
                  ('LFO3 pg. 2', {PARAMETERS_KEY: ('L 3 On',
                                     use('L 3 St Mode').if_parameter('L 3 On').has_value('on'),
                                     use('').if_parameter('L 3 On').has_value('off').else_use('L 3 Spin').if_parameter('L 3 St Mode').has_value('Spin').else_use('L 3 Phase'),
                                     '',
                                     '',
                                     '',
                                     '',
                                     '')}),
                  ('Aux Env.', {PARAMETERS_KEY: ('Ae On',
                                     use('Ae < Env').if_parameter('Ae On').has_value('on'),
                                     use('Ae Init').if_parameter('Ae On').has_value('on'),
                                     use('Ae Attack').if_parameter('Ae On').has_value('on'),
                                     use('Ae Peak').if_parameter('Ae On').has_value('on'),
                                     use('Ae Decay').if_parameter('Ae On').has_value('on'),
                                     use('Ae Sustain').if_parameter('Ae On').has_value('on'),
                                     use('Ae Release').if_parameter('Ae On').has_value('on'))}),
                  ('Aux Env. 2', {PARAMETERS_KEY: ('Ae On',
                                     use('Ae End').if_parameter('Ae On').has_value('off'),
                                     use('Ae R < Vel').if_parameter('Ae On').has_value('off'),
                                     use('Ae Mode').if_parameter('Ae On').has_value('off'),
                                     use('').if_parameter('Ae On').has_value('off').else_use('Ae Loop').if_parameter('Ae Mode').has_value('Loop').else_use('Ae Retrig').if_parameter('Ae Mode').has_value('Beat').else_use('Ae Retrig').if_parameter('Ae Mode').has_value('Sync').else_use(''),
                                     '',
                                     '',
                                     '')}))),
 'OriginalSimpler': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Ve Attack').if_parameter('Multi Sample').has_value('on').else_use('Start'),
                                        use('Ve Decay').if_parameter('Multi Sample').has_value('on').else_use('End'),
                                        use('Ve Sustain').if_parameter('Multi Sample').has_value('on').else_use('Fade In').if_parameter('Mode').has_value('One-Shot').else_use('Nudge').if_parameter('Mode').has_value('Slicing').else_use('S Start').if_parameter('Mode').has_value('Classic'),
                                        use('Ve Release').if_parameter('Multi Sample').has_value('on').else_use('Fade Out').if_parameter('Mode').has_value('One-Shot').else_use('Playback').if_parameter('Mode').has_value('Slicing').else_use('S Length').if_parameter('Mode').has_value('Classic'),
                                        use('Pan').if_parameter('Multi Sample').has_value('on').and_parameter('F On').has_value('off').else_use('Filter Type').if_parameter('Filter Type').is_available(True).and_parameter('Multi Sample').has_value('on').else_use('Filter Type (Legacy)').if_parameter('Multi Sample').has_value('on').else_use('Transpose').if_parameter('Mode').has_value('One-Shot').else_use('S Loop On').if_parameter('Mode').has_value('Classic'),
                                        use('Filter Freq').if_parameter('Multi Sample').has_value('on').and_parameter('F On').has_value('on').else_use('Transpose').if_parameter('Multi Sample').has_value('on').else_use('Gain').if_parameter('Mode').has_value('One-Shot').else_use('Slice by').if_parameter('Mode').has_value('Slicing').else_use('S Loop Length').if_parameter('Mode').has_value('Classic').and_parameter('S Loop On').has_value('on').else_use('Transpose'),
                                        use('Detune').if_parameter('Multi Sample').has_value('on').and_parameter('F On').has_value('off').else_use('Filter Res').if_parameter('Filter Res').is_available(True).and_parameter('Multi Sample').has_value('on').else_use('Filter Res (Legacy)').if_parameter('Multi Sample').has_value('on').else_use('Trigger Mode').if_parameter('Mode').has_value('One-Shot').else_use('Sensitivity').if_parameter('Slice by').has_value('Transient').and_parameter('Mode').has_value('Slicing').else_use('Division').if_parameter('Slice by').has_value('Beat').and_parameter('Mode').has_value('Slicing').else_use('Regions').if_parameter('Slice by').has_value('Region').and_parameter('Mode').has_value('Slicing').else_use('Pad Slicing').if_parameter('Slice Style').has_value('Manual').and_parameter('Mode').has_value('Slicing').else_use('Trigger Mode').if_parameter('Mode').has_value('Slicing').else_use('S Loop Fade').if_parameter('Mode').has_value('Classic').and_parameter('Warp').has_value('Off').else_use('Detune'),
                                        use('Volume').if_parameter('Multi Sample').has_value('on').else_use('Mode'))}),
                     ('Global', {PARAMETERS_KEY: ('Glide Mode',
                                        use('').if_parameter('Glide Mode').has_value('Off').else_use('Glide Time'),
                                        'Voices',
                                        'Transpose',
                                        'Detune',
                                        'Vol < Vel',
                                        'Gain',
                                        'Volume')}),
                     ('Volume Envelope', {PARAMETERS_KEY: (use('Ve Attack').if_parameter('Mode').has_value('Classic').else_use('Fade In'),
                                        use('Ve Decay').if_parameter('Mode').has_value('Classic').else_use('Fade Out'),
                                        use('Ve Sustain').if_parameter('Mode').has_value('Classic'),
                                        use('Ve Release').if_parameter('Mode').has_value('Classic'),
                                        'Filt < Vel',
                                        'Vol < Vel',
                                        'Vol < LFO',
                                        'Volume')}),
                     ('Warp', {PARAMETERS_KEY: (use('').if_parameter('Multi Sample').has_value('on').else_use('Warp'),
                                        use('').if_parameter('Multi Sample').has_value('on').else_use('').if_parameter('Warp').has_value('off').else_use('Warp Mode'),
                                        use('').if_parameter('Multi Sample').has_value('on').else_use('').if_parameter('Warp').has_value('off').else_use('Preserve').if_parameter('Warp Mode').has_value('Beats').else_use('Grain Size Tones').if_parameter('Warp Mode').has_value('Tones').else_use('Grain Size Texture').if_parameter('Warp Mode').has_value('Texture').else_use('Formants').if_parameter('Warp Mode').has_value('Pro'),
                                        use('').if_parameter('Multi Sample').has_value('on').else_use('').if_parameter('Warp').has_value('off').else_use('Loop Mode').if_parameter('Warp Mode').has_value('Beats').else_use('Flux').if_parameter('Warp Mode').has_value('Texture').else_use('Envelope Complex Pro').if_parameter('Warp Mode').has_value('Pro'),
                                        use('').if_parameter('Multi Sample').has_value('on').else_use('').if_parameter('Warp').has_value('off').else_use('Envelope').if_parameter('Warp Mode').has_value('Beats'),
                                        '',
                                        '',
                                        '')}),
                     ('Filter', {PARAMETERS_KEY: ('F On',
                                        use('').if_parameter('F On').has_value('off').else_use('Filter Type').if_parameter('Filter Type').is_available(True).else_use('Filter Type (Legacy)'),
                                        use('Filter Freq').if_parameter('F On').has_value('on'),
                                        use('').if_parameter('F On').has_value('off').else_use('Filter Res').if_parameter('Filter Res').is_available(True).else_use('Filter Res (Legacy)'),
                                        use('').if_parameter('F On').has_value('off').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Lowpass').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Highpass').else_use('Filter Circuit - BP/NO/Morph'),
                                        use('').if_parameter('F On').has_value('off').else_use('Filter Morph').if_parameter('Filter Type').has_value('Morph').else_use('').if_parameter('Filter Type').has_value('Lowpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Highpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Bandpass').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Notch').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('Filter Drive'),
                                        use('Filter Slope').if_parameter('F On').has_value('on').and_parameter('Filter Slope').is_available(True),
                                        use('Filt < LFO').if_parameter('F On').has_value('on'))}),
                     ('Filter Envelope', {PARAMETERS_KEY: ('Fe On',
                                        use('Fe Attack').if_parameter('Fe On').has_value('on'),
                                        use('Fe Decay').if_parameter('Fe On').has_value('on'),
                                        use('Fe Sustain').if_parameter('Fe On').has_value('on'),
                                        use('Fe Release').if_parameter('Fe On').has_value('on'),
                                        use('Filter Freq').if_parameter('Fe On').has_value('on').and_parameter('F On').has_value('on'),
                                        use('Filter Res').if_parameter('Fe On').has_value('on').and_parameter('F On').has_value('on'),
                                        use('Fe < Env').if_parameter('Fe On').has_value('on'))}),
                     ('Pitch Envelope', {PARAMETERS_KEY: ('Pe On',
                                        use('Pe Attack').if_parameter('Pe On').has_value('on'),
                                        use('Pe Decay').if_parameter('Pe On').has_value('on'),
                                        use('Pe Sustain').if_parameter('Pe On').has_value('on'),
                                        use('Pe Release').if_parameter('Pe On').has_value('on'),
                                        use('Pe < Env').if_parameter('Pe On').has_value('on'),
                                        '',
                                        '')}),
                     ('LFO', {PARAMETERS_KEY: ('L On',
                                        use('L Wave').if_parameter('L On').has_value('on'),
                                        use('L Sync').if_parameter('L On').has_value('on'),
                                        use('').if_parameter('L On').has_value('off').else_use('L Rate').if_parameter('L Sync').has_value('Free').else_use('L Sync Rate'),
                                        use('L Attack').if_parameter('L On').has_value('on'),
                                        use('L R < Key').if_parameter('L On').has_value('on'),
                                        use('L Retrig').if_parameter('L On').has_value('on'),
                                        use('L Offset').if_parameter('L On').has_value('on'))}),
                     ('Pan', {PARAMETERS_KEY: ('Pan',
                                        'Spread',
                                        'Pan < Rnd',
                                        'Pan < LFO',
                                        '',
                                        '',
                                        '',
                                        '')}))),
 'StringStudio': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Excitator Type').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc ForceMassProt').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc FricStiff').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Velocity').if_parameter('Exc On/Off').has_value('on'),
                                     use('E Pos').if_parameter('Exc On/Off').has_value('on'),
                                     'String Decay',
                                     'Str Damping',
                                     'Volume')}),
                  ('Excitator', {PARAMETERS_KEY: ('Exc On/Off',
                                     use('Excitator Type').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc ForceMassProt').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc FricStiff').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Velocity').if_parameter('Exc On/Off').has_value('on'),
                                     use('E Pos').if_parameter('Exc On/Off').has_value('on'),
                                     use('E Pos Abs').if_parameter('Exc On/Off').has_value('on'),
                                     'Volume')}),
                  ('String & Pickup', {PARAMETERS_KEY: ('String Decay',
                                     'S Decay < Key',
                                     'S Decay Ratio',
                                     'Str Inharmon',
                                     'Str Damping',
                                     'S Damp < Key',
                                     'Pickup On/Off',
                                     use('Pickup Pos').if_parameter('Pickup On/Off').has_value('on'))}),
                  ('Damper', {PARAMETERS_KEY: ('Damper On',
                                     use('Damper Mass').if_parameter('Damper On').has_value('on'),
                                     use('D Stiffness').if_parameter('Damper On').has_value('on'),
                                     use('Damp Pos').if_parameter('Damper On').has_value('on'),
                                     use('D Damping').if_parameter('Damper On').has_value('on'),
                                     use('Damper Gated').if_parameter('Damper On').has_value('on'),
                                     use('').if_parameter('Damper On').has_value('off').else_use('D Velocity').if_parameter('Damper Gated').has_value('on').else_use(''),
                                     use('D Pos Abs').if_parameter('Damper On').has_value('on'))}),
                  ('Termination', {PARAMETERS_KEY: ('Term On/Off',
                                     use('Term Mass').if_parameter('Term On/Off').has_value('on'),
                                     use('Term Fng Stiff').if_parameter('Term On/Off').has_value('on'),
                                     use('Term Fret Stiff').if_parameter('Term On/Off').has_value('on'),
                                     use('T Mass < Vel').if_parameter('Term On/Off').has_value('on'),
                                     use('T Mass < Key').if_parameter('Term On/Off').has_value('on'),
                                     '',
                                     'Volume')}),
                  ('Body', {PARAMETERS_KEY: ('Body On/Off',
                                     use('Body Type').if_parameter('Body On/Off').has_value('on'),
                                     use('Body Size').if_parameter('Body On/Off').has_value('on'),
                                     use('Body Decay').if_parameter('Body On/Off').has_value('on'),
                                     use('Body Low-Cut').if_parameter('Body On/Off').has_value('on'),
                                     use('Body High-Cut').if_parameter('Body On/Off').has_value('on'),
                                     use('Body Mix').if_parameter('Body On/Off').has_value('on'),
                                     'Volume')}),
                  ('Filter', {PARAMETERS_KEY: ('Filter On/Off',
                                     use('Filter Freq').if_parameter('Filter On/Off').has_value('on'),
                                     use('Filter Reso').if_parameter('Filter On/Off').has_value('on'),
                                     use('Filter Type').if_parameter('Filter On/Off').has_value('on'),
                                     use('Freq < Env').if_parameter('Filter On/Off').has_value('on'),
                                     use('Freq < LFO').if_parameter('Filter On/Off').has_value('on'),
                                     use('Reso < Env').if_parameter('Filter On/Off').has_value('on'),
                                     use('Reso < LFO').if_parameter('Filter On/Off').has_value('on'))}),
                  ('LFO', {PARAMETERS_KEY: ('LFO On/Off',
                                     use('LFO Shape').if_parameter('LFO On/Off').has_value('on'),
                                     use('LFO Sync On').if_parameter('LFO On/Off').has_value('on'),
                                     use('').if_parameter('LFO On/Off').has_value('off').else_use('LFO SyncRate').if_parameter('LFO Sync On').has_value('Beat').else_use('LFO Speed'),
                                     use('LFO Delay').if_parameter('LFO On/Off').has_value('on'),
                                     use('LFO Fade In').if_parameter('LFO On/Off').has_value('on'),
                                     '',
                                     '')}),
                  ('Vibrato', {PARAMETERS_KEY: ('Vibrato On/Off',
                                     use('Vib Delay').if_parameter('Vibrato On/Off').has_value('on'),
                                     use('Vib Fade-In').if_parameter('Vibrato On/Off').has_value('on'),
                                     use('Vib Speed').if_parameter('Vibrato On/Off').has_value('on'),
                                     use('Vib Amount').if_parameter('Vibrato On/Off').has_value('on'),
                                     use('Vib < ModWh').if_parameter('Vibrato On/Off').has_value('on'),
                                     use('Vib Error').if_parameter('Vibrato On/Off').has_value('on'),
                                     '')}),
                  ('Unison & Portamento', {PARAMETERS_KEY: ('Unison On/Off',
                                     use('Unison Voices').if_parameter('Unison On/Off').has_value('on'),
                                     use('Uni Delay').if_parameter('Unison On/Off').has_value('on'),
                                     use('Uni Detune').if_parameter('Unison On/Off').has_value('on'),
                                     'Porta On/Off',
                                     use('Porta Time').if_parameter('Porta On/Off').has_value('on'),
                                     use('Porta Legato').if_parameter('Porta On/Off').has_value('on'),
                                     use('Porta Prop').if_parameter('Porta On/Off').has_value('on'))}),
                  ('Global', {PARAMETERS_KEY: ('Octave',
                                     'Semitone',
                                     'Fine Tune',
                                     'Voices',
                                     'PB Depth',
                                     'Stretch',
                                     'Error',
                                     'Key Priority')}),
                  ('Filt. Env.', {PARAMETERS_KEY: ('FEG On/Off',
                                     use('FEG Attack').if_parameter('FEG On/Off').has_value('on'),
                                     use('FEG Decay').if_parameter('FEG On/Off').has_value('on'),
                                     use('FEG Sustain').if_parameter('FEG On/Off').has_value('on'),
                                     use('FEG Release').if_parameter('FEG On/Off').has_value('on'),
                                     use('FEG Att < Vel').if_parameter('FEG On/Off').has_value('on'),
                                     use('FEG < Vel').if_parameter('FEG On/Off').has_value('on'),
                                     '')}),
                  ('Excitator Mod.', {PARAMETERS_KEY: (use('Exc Prot < Vel').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Prot < Key').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Stiff < Vel').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Stiff < Key').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Vel < Vel').if_parameter('Exc On/Off').has_value('on'),
                                     use('Exc Vel < Key').if_parameter('Exc On/Off').has_value('on'),
                                     use('E Pos < Vel').if_parameter('Exc On/Off').has_value('on'),
                                     use('E Pos < Key').if_parameter('Exc On/Off').has_value('on'))}),
                  ('Mass Mod.', {PARAMETERS_KEY: (use('D Mass < Key').if_parameter('Damper On').has_value('on'),
                                     use('D Stiff < Key').if_parameter('Damper On').has_value('on'),
                                     use('D Pos < Key').if_parameter('Damper On').has_value('on'),
                                     use('D Pos < Vel').if_parameter('Damper On').has_value('on'),
                                     use('Damper Gated').if_parameter('Damper On').has_value('on'),
                                     use('').if_parameter('Damper On').has_value('off').else_use('D Velo < Key').if_parameter('Damper Gated').has_value('on').else_use(''),
                                     '',
                                     '')}))),
 'MidiArpeggiator': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Style',
                                        use('Synced Rate').if_parameter('Sync On').has_value('on').else_use('Free Rate'),
                                        'Gate',
                                        'Offset',
                                        'Hold On',
                                        'Tranpose Key',
                                        'Transp. Steps',
                                        'Transp. Dist.')}), ('Rhythm', {PARAMETERS_KEY: ('Sync On',
                                        use('Synced Rate').if_parameter('Sync On').has_value('on').else_use('Free Rate'),
                                        use('Groove').if_parameter('Sync On').has_value('on'),
                                        'Offset',
                                        'Repeats',
                                        'Gate',
                                        'Retrigger Mode',
                                        use('Ret. Interval').if_parameter('Retrigger Mode').has_value('Beat'))}), ('Pitch/Vel.', {PARAMETERS_KEY: ('Tranpose Mode',
                                        use('').if_parameter('Tranpose Mode').has_value('Shift').else_use('Tranpose Key'),
                                        use('').if_parameter('Tranpose Mode').has_value('Shift').else_use('Transp. Steps'),
                                        use('').if_parameter('Tranpose Mode').has_value('Shift').else_use('Transp. Dist.'),
                                        'Velocity On',
                                        use('Vel. Retrigger').if_parameter('Velocity On').has_value('on'),
                                        use('Velocity Decay').if_parameter('Velocity On').has_value('on'),
                                        use('Velocity Target').if_parameter('Velocity On').has_value('on'))}))),
 'MidiChord': IndexedDict((('Shift', {PARAMETERS_KEY: ('Shift1',
                                  'Shift2',
                                  'Shift3',
                                  'Shift4',
                                  'Shift5',
                                  'Shift6',
                                  '',
                                  '')}), ('Velocity', {PARAMETERS_KEY: ('Velocity1',
                                  'Velocity2',
                                  'Velocity3',
                                  'Velocity4',
                                  'Velocity5',
                                  'Velocity6',
                                  '',
                                  '')}))),
 'MidiNoteLength': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Trigger Mode',
                                       'Sync On',
                                       use('Synced Length').if_parameter('Sync On').has_value('on').else_use('Time Length'),
                                       'Gate',
                                       use('On/Off-Balance').if_parameter('Trigger Mode').has_value('on'),
                                       use('Decay Time').if_parameter('Trigger Mode').has_value('on'),
                                       use('Decay Key Scale').if_parameter('Trigger Mode').has_value('on'),
                                       '')}),)),
 'MidiPitcher': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Pitch',
                                    'Range',
                                    'Lowest',
                                    '',
                                    '',
                                    '',
                                    '',
                                    '')}),)),
 'MidiRandom': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Chance',
                                   'Choices',
                                   'Mode',
                                   'Scale',
                                   'Sign',
                                   '',
                                   '',
                                   '')}),)),
 'MidiScale': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Base',
                                  'Transpose',
                                  'Range',
                                  'Lowest',
                                  'Fold',
                                  '',
                                  '',
                                  '')}),)),
 'MidiVelocity': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Mode',
                                     use('').if_parameter('Mode').has_value('Fixed').else_use('Drive'),
                                     use('').if_parameter('Mode').has_value('Fixed').else_use('Compand'),
                                     'Out Hi',
                                     use('').if_parameter('Mode').has_value('Fixed').else_use('Out Low'),
                                     use('').if_parameter('Mode').has_value('Fixed').else_use('Range'),
                                     use('').if_parameter('Mode').has_value('Fixed').else_use('Lowest'),
                                     'Random')}),)),
 'Amp': IndexedDict((('Global', {PARAMETERS_KEY: ('Amp Type',
                            'Bass',
                            'Middle',
                            'Treble',
                            'Presence',
                            'Gain',
                            'Volume',
                            'Dry/Wet')}), ('Dual/Mono', {PARAMETERS_KEY: ('Dual Mono',
                            '',
                            '',
                            '',
                            '',
                            '',
                            '',
                            '')}))),
 'AutoFilter': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Filter Type').if_parameter('Filter Type').is_available(True).else_use('Filter Type (Legacy)'),
                                   use('Frequency'),
                                   use('Resonance').if_parameter('Resonance').is_available(True).else_use('Resonance (Legacy)'),
                                   use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Lowpass').else_use('Filter Circuit - LP/HP').if_parameter('Filter Type').has_value('Highpass').else_use('Filter Circuit - BP/NO/Morph'),
                                   use('Morph').if_parameter('Filter Type').has_value('Morph').else_use('').if_parameter('Filter Type').has_value('Lowpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Highpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Bandpass').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Notch').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('Drive').if_parameter('Drive').is_available(True),
                                   'LFO Amount',
                                   'LFO Sync',
                                   use('LFO Frequency').if_parameter('LFO Sync').has_value('Free').else_use('LFO Sync Rate'))}),
                ('Envelope', {PARAMETERS_KEY: (use('Filter Type').if_parameter('Filter Type').is_available(True).else_use('Filter Type (Legacy)'),
                                   use('Frequency'),
                                   use('Resonance').if_parameter('Resonance').is_available(True).else_use('Resonance (Legacy)'),
                                   use('Slope').if_parameter('Slope').is_available(True),
                                   use('Morph').if_parameter('Filter Type').has_value('Morph').else_use('').if_parameter('Filter Type').has_value('Lowpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Highpass').and_parameter('Filter Circuit - LP/HP').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Bandpass').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('').if_parameter('Filter Type').has_value('Notch').and_parameter('Filter Circuit - BP/NO/Morph').has_value('Clean').else_use('Drive').if_parameter('Drive').is_available(True),
                                   'Env. Attack',
                                   'Env. Release',
                                   'Env. Modulation')}),
                ('LFO', {PARAMETERS_KEY: ('LFO Amount',
                                   'LFO Waveform',
                                   'LFO Sync',
                                   use('LFO Frequency').if_parameter('LFO Sync').has_value('Free').else_use('LFO Sync Rate'),
                                   use('').if_parameter('LFO Waveform').has_value('S&H Mono').else_use('LFO Offset').if_parameter('LFO Sync').has_value('Sync').else_use('LFO Stereo Mode'),
                                   use('').if_parameter('LFO Waveform').has_value('S&H Mono').else_use('LFO Phase').if_parameter('LFO Sync').has_value('Sync').else_use('LFO Phase').if_parameter('LFO Stereo Mode').has_value('Phase').else_use('LFO Spin'),
                                   'LFO Quantize On',
                                   use('LFO Quantize Rate').if_parameter('LFO Quantize On').has_value('on'))}),
                ('Sidechain', {PARAMETERS_KEY: ('Ext. In On',
                                   use('Ext. In Mix').if_parameter('Ext. In On').has_value('on'),
                                   use('Ext. In Gain').if_parameter('Ext. In On').has_value('on'),
                                   '',
                                   '',
                                   '',
                                   '',
                                   '')}))),
 'AutoPan': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Amount',
                                'Shape',
                                'Invert',
                                'Waveform',
                                'LFO Type',
                                use('Sync Rate').if_parameter('LFO Type').has_value('Beats').else_use('Frequency'),
                                use('').if_parameter('Waveform').has_value('S&H Width').else_use('Stereo Mode').if_parameter('LFO Type').has_value('Frequency').else_use('Offset'),
                                use('Width (Random)').if_parameter('Waveform').has_value('S&H Width').else_use('Phase').if_parameter('LFO Type').has_value('Beats').else_use('Spin').if_parameter('Stereo Mode').has_value('Spin').else_use('Phase'))}),)),
 'BeatRepeat': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Grid',
                                   'Interval',
                                   'Offset',
                                   'Gate',
                                   'Pitch',
                                   'Pitch Decay',
                                   'Variation',
                                   'Chance')}), ('Filt/Mix', {PARAMETERS_KEY: ('Filter On',
                                   use('Filter Freq').if_parameter('Filter On').has_value('on'),
                                   use('Filter Width').if_parameter('Filter On').has_value('on'),
                                   '',
                                   'Mix Type',
                                   'Volume',
                                   'Decay',
                                   'Chance')}), ('Repeat Rate', {PARAMETERS_KEY: ('Repeat',
                                   'Interval',
                                   'Offset',
                                   'Gate',
                                   'Grid',
                                   'Block Triplets',
                                   'Variation',
                                   'Variation Type')}))),
 'Cabinet': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Cabinet Type',
                                'Microphone Type',
                                'Microphone Position',
                                'Dual Mono',
                                '',
                                '',
                                '',
                                'Dry/Wet')}),)),
 'Chorus': IndexedDict((('Chorus', {PARAMETERS_KEY: ('LFO Amount',
                               'LFO Rate',
                               'Delay 1 Time',
                               'Delay 1 HiPass',
                               'Delay 2 Mode',
                               use('').if_parameter('Delay 2 Mode').has_value('off').else_use('Delay 2 Time'),
                               'Feedback',
                               'Dry/Wet')}), ('Other', {PARAMETERS_KEY: ('LFO Extend On',
                               'Polarity',
                               'Link On',
                               '',
                               '',
                               '',
                               '',
                               '')}))),
 'Compressor2': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Threshold',
                                    use('Expansion Ratio').if_parameter('Model').has_value('Expand').else_use('Ratio'),
                                    'Model',
                                    'Knee',
                                    'Attack',
                                    use('Release').if_parameter('Auto Release On/Off').has_value('off').else_use('Makeup').if_parameter('Ext. In On').has_value('off'),
                                    'Dry/Wet',
                                    'Output Gain')}), ('Sidechain', {PARAMETERS_KEY: ('Ext. In On',
                                    use('Ext. In Gain').if_parameter('Ext. In On').has_value('on'),
                                    use('Ext. In Mix').if_parameter('Ext. In On').has_value('on'),
                                    'Side Listen',
                                    'EQ On',
                                    use('EQ Mode').if_parameter('EQ On').has_value('on'),
                                    use('EQ Freq').if_parameter('EQ On').has_value('on'),
                                    use('').if_parameter('EQ On').has_value('off').else_use('EQ Gain').if_parameter('EQ Mode').has_value('Low Shelf').else_use('EQ Gain').if_parameter('EQ Mode').has_value('High Shelf').else_use('EQ Gain').if_parameter('EQ Mode').has_value('Bell').else_use('EQ Q'))}), ('Global', {PARAMETERS_KEY: ('Auto Release On/Off',
                                    'Env Mode',
                                    use('Makeup').if_parameter('Ext. In On').has_value('off'),
                                    'LookAhead',
                                    '',
                                    '',
                                    'Dry/Wet',
                                    'Output Gain')}))),
 'Corpus': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Resonance Type',
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('').if_parameter('Resonance Type').has_value('Pipe').else_use('Brightness'),
                               'Decay',
                               use('Radius').if_parameter('Resonance Type').has_value('Tube').else_use('Radius').if_parameter('Resonance Type').has_value('Pipe').else_use('Material'),
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('Opening').if_parameter('Resonance Type').has_value('Pipe').else_use('Inharmonics'),
                               use('Ratio').if_parameter('Resonance Type').has_value('Plate').else_use('Ratio').if_parameter('Resonance Type').has_value('Membrane').else_use(''),
                               use('Transpose').if_parameter('MIDI Frequency').has_value('on').else_use('Tune'),
                               'Dry Wet')}),
            ('Body', {PARAMETERS_KEY: ('Resonance Type',
                               use('Ratio').if_parameter('Resonance Type').has_value('Plate').else_use('Ratio').if_parameter('Resonance Type').has_value('Membrane'),
                               'Decay',
                               use('Radius').if_parameter('Resonance Type').has_value('Tube').else_use('Radius').if_parameter('Resonance Type').has_value('Pipe').else_use('Material'),
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('Opening').if_parameter('Resonance Type').has_value('Pipe').else_use('Inharmonics'),
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('').if_parameter('Resonance Type').has_value('Pipe').else_use('Listening L'),
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('').if_parameter('Resonance Type').has_value('Pipe').else_use('Listening R'),
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('').if_parameter('Resonance Type').has_value('Pipe').else_use('Hit'))}),
            ('LFO', {PARAMETERS_KEY: ('LFO On/Off',
                               use('LFO Shape').if_parameter('LFO On/Off').has_value('on'),
                               use('LFO Amount').if_parameter('LFO On/Off').has_value('on'),
                               use('LFO Sync').if_parameter('LFO On/Off').has_value('on'),
                               use('').if_parameter('LFO On/Off').has_value('off').else_use('LFO Rate').if_parameter('LFO Sync').has_value('Free').else_use('LFO Sync Rate'),
                               use('').if_parameter('LFO On/Off').has_value('off').else_use('LFO Stereo Mode').if_parameter('LFO Sync').has_value('Free').else_use('Offset'),
                               use('').if_parameter('LFO On/Off').has_value('off').else_use('Phase').if_parameter('LFO Sync').has_value('Sync').else_use('Spin').if_parameter('LFO Stereo Mode').has_value('Spin'),
                               '')}),
            ('Tune & Sidechain', {PARAMETERS_KEY: ('MIDI Frequency',
                               'MIDI Mode',
                               use('Transpose').if_parameter('MIDI Frequency').has_value('on').else_use('Tune'),
                               use('Fine').if_parameter('MIDI Frequency').has_value('on'),
                               'Spread',
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('').if_parameter('Resonance Type').has_value('Pipe').else_use('Brightness'),
                               'Note Off',
                               use('Off Decay').if_parameter('Note Off').has_value('on'))}),
            ('Filter & Mix', {PARAMETERS_KEY: ('Filter On/Off',
                               use('Mid Freq').if_parameter('Filter On/Off').has_value('on'),
                               use('Width').if_parameter('Filter On/Off').has_value('on'),
                               use('').if_parameter('Resonance Type').has_value('Tube').else_use('').if_parameter('Resonance Type').has_value('Pipe').else_use('Resonator Quality'),
                               'Bleed',
                               'Gain',
                               'Dry Wet',
                               '')}))),
 'Tube': IndexedDict((('Character', {PARAMETERS_KEY: ('Drive',
                             'Tube Type',
                             'Bias',
                             'Tone',
                             'Attack',
                             'Release',
                             'Envelope',
                             'Dry/Wet')}), ('Output', {PARAMETERS_KEY: ('',
                             '',
                             '',
                             '',
                             '',
                             '',
                             'Output',
                             'Dry/Wet')}))),
 'Eq8': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('1 Frequency A').if_parameter('1 Filter On A').has_value('on'),
                            use('').if_parameter('1 Filter On A').has_value('off').else_use('1 Gain A').if_parameter('1 Filter Type A').has_value('Low Shelf').else_use('1 Gain A').if_parameter('1 Filter Type A').has_value('Bell').else_use('1 Gain A').if_parameter('1 Filter Type A').has_value('High Shelf').else_use('1 Resonance A'),
                            use('2 Frequency A').if_parameter('2 Filter On A').has_value('on'),
                            use('').if_parameter('2 Filter On A').has_value('off').else_use('2 Gain A').if_parameter('2 Filter Type A').has_value('Low Shelf').else_use('2 Gain A').if_parameter('2 Filter Type A').has_value('Bell').else_use('2 Gain A').if_parameter('2 Filter Type A').has_value('High Shelf').else_use('2 Resonance A'),
                            use('3 Frequency A').if_parameter('3 Filter On A').has_value('on'),
                            use('').if_parameter('3 Filter On A').has_value('off').else_use('3 Gain A').if_parameter('3 Filter Type A').has_value('Low Shelf').else_use('3 Gain A').if_parameter('3 Filter Type A').has_value('Bell').else_use('3 Gain A').if_parameter('3 Filter Type A').has_value('High Shelf').else_use('3 Resonance A'),
                            use('4 Frequency A').if_parameter('4 Filter On A').has_value('on'),
                            use('').if_parameter('4 Filter On A').has_value('off').else_use('4 Gain A').if_parameter('4 Filter Type A').has_value('Low Shelf').else_use('4 Gain A').if_parameter('4 Filter Type A').has_value('Bell').else_use('4 Gain A').if_parameter('4 Filter Type A').has_value('High Shelf').else_use('4 Resonance A'))}),
         ('EQ Band 1', {PARAMETERS_KEY: ('1 Filter On A',
                            use('1 Filter Type A').if_parameter('1 Filter On A').has_value('on'),
                            use('1 Frequency A').if_parameter('1 Filter On A').has_value('on'),
                            use('1 Gain A').if_parameter('1 Filter On A').has_value('on'),
                            use('1 Resonance A').if_parameter('1 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 2', {PARAMETERS_KEY: ('2 Filter On A',
                            use('2 Filter Type A').if_parameter('2 Filter On A').has_value('on'),
                            use('2 Frequency A').if_parameter('2 Filter On A').has_value('on'),
                            use('2 Gain A').if_parameter('2 Filter On A').has_value('on'),
                            use('2 Resonance A').if_parameter('2 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 3', {PARAMETERS_KEY: ('3 Filter On A',
                            use('3 Filter Type A').if_parameter('3 Filter On A').has_value('on'),
                            use('3 Frequency A').if_parameter('3 Filter On A').has_value('on'),
                            use('3 Gain A').if_parameter('3 Filter On A').has_value('on'),
                            use('3 Resonance A').if_parameter('3 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 4', {PARAMETERS_KEY: ('4 Filter On A',
                            use('4 Filter Type A').if_parameter('4 Filter On A').has_value('on'),
                            use('4 Frequency A').if_parameter('4 Filter On A').has_value('on'),
                            use('4 Gain A').if_parameter('4 Filter On A').has_value('on'),
                            use('4 Resonance A').if_parameter('4 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 5', {PARAMETERS_KEY: ('5 Filter On A',
                            use('5 Filter Type A').if_parameter('5 Filter On A').has_value('on'),
                            use('5 Frequency A').if_parameter('5 Filter On A').has_value('on'),
                            use('5 Gain A').if_parameter('5 Filter On A').has_value('on'),
                            use('5 Resonance A').if_parameter('5 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 6', {PARAMETERS_KEY: ('6 Filter On A',
                            use('6 Filter Type A').if_parameter('6 Filter On A').has_value('on'),
                            use('6 Frequency A').if_parameter('6 Filter On A').has_value('on'),
                            use('6 Gain A').if_parameter('6 Filter On A').has_value('on'),
                            use('6 Resonance A').if_parameter('6 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 7', {PARAMETERS_KEY: ('7 Filter On A',
                            use('7 Filter Type A').if_parameter('7 Filter On A').has_value('on'),
                            use('7 Frequency A').if_parameter('7 Filter On A').has_value('on'),
                            use('7 Gain A').if_parameter('7 Filter On A').has_value('on'),
                            use('7 Resonance A').if_parameter('7 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('EQ Band 8', {PARAMETERS_KEY: ('8 Filter On A',
                            use('8 Filter Type A').if_parameter('8 Filter On A').has_value('on'),
                            use('8 Frequency A').if_parameter('8 Filter On A').has_value('on'),
                            use('8 Gain A').if_parameter('8 Filter On A').has_value('on'),
                            use('8 Resonance A').if_parameter('8 Filter On A').has_value('on'),
                            'Adaptive Q',
                            'Scale',
                            'Output Gain')}),
         ('8 x Frequency', {PARAMETERS_KEY: (use('1 Frequency A').if_parameter('1 Filter On A').has_value('on'),
                            use('2 Frequency A').if_parameter('2 Filter On A').has_value('on'),
                            use('3 Frequency A').if_parameter('3 Filter On A').has_value('on'),
                            use('4 Frequency A').if_parameter('4 Filter On A').has_value('on'),
                            use('5 Frequency A').if_parameter('5 Filter On A').has_value('on'),
                            use('6 Frequency A').if_parameter('6 Filter On A').has_value('on'),
                            use('7 Frequency A').if_parameter('7 Filter On A').has_value('on'),
                            use('8 Frequency A').if_parameter('8 Filter On A').has_value('on'))}),
         ('8 x Gain', {PARAMETERS_KEY: (use('').if_parameter('1 Filter On A').has_value('off').else_use('1 Gain A').if_parameter('1 Filter Type A').has_value('Low Shelf').else_use('1 Gain A').if_parameter('1 Filter Type A').has_value('Bell').else_use('1 Gain A').if_parameter('1 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('2 Filter On A').has_value('off').else_use('2 Gain A').if_parameter('2 Filter Type A').has_value('Low Shelf').else_use('2 Gain A').if_parameter('2 Filter Type A').has_value('Bell').else_use('2 Gain A').if_parameter('2 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('3 Filter On A').has_value('off').else_use('3 Gain A').if_parameter('3 Filter Type A').has_value('Low Shelf').else_use('3 Gain A').if_parameter('3 Filter Type A').has_value('Bell').else_use('3 Gain A').if_parameter('3 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('4 Filter On A').has_value('off').else_use('4 Gain A').if_parameter('4 Filter Type A').has_value('Low Shelf').else_use('4 Gain A').if_parameter('4 Filter Type A').has_value('Bell').else_use('4 Gain A').if_parameter('4 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('5 Filter On A').has_value('off').else_use('5 Gain A').if_parameter('5 Filter Type A').has_value('Low Shelf').else_use('5 Gain A').if_parameter('5 Filter Type A').has_value('Bell').else_use('5 Gain A').if_parameter('5 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('6 Filter On A').has_value('off').else_use('6 Gain A').if_parameter('6 Filter Type A').has_value('Low Shelf').else_use('6 Gain A').if_parameter('6 Filter Type A').has_value('Bell').else_use('6 Gain A').if_parameter('6 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('7 Filter On A').has_value('off').else_use('7 Gain A').if_parameter('7 Filter Type A').has_value('Low Shelf').else_use('7 Gain A').if_parameter('7 Filter Type A').has_value('Bell').else_use('7 Gain A').if_parameter('7 Filter Type A').has_value('High Shelf').else_use(''),
                            use('').if_parameter('8 Filter On A').has_value('off').else_use('8 Gain A').if_parameter('8 Filter Type A').has_value('Low Shelf').else_use('8 Gain A').if_parameter('8 Filter Type A').has_value('Bell').else_use('8 Gain A').if_parameter('8 Filter Type A').has_value('High Shelf').else_use(''))}),
         ('8 x Resonance', {PARAMETERS_KEY: ('1 Resonance A',
                            '2 Resonance A',
                            '3 Resonance A',
                            '4 Resonance A',
                            '5 Resonance A',
                            '6 Resonance A',
                            '7 Resonance A',
                            '8 Resonance A')}))),
 'FilterEQ3': IndexedDict((('EQ', {PARAMETERS_KEY: ('LowOn',
                                  'MidOn',
                                  'HighOn',
                                  use('GainLo').if_parameter('LowOn').has_value('on'),
                                  use('GainMid').if_parameter('MidOn').has_value('on'),
                                  use('GainHi').if_parameter('HighOn').has_value('on'),
                                  'FreqLo',
                                  'FreqHi')}), ('Slope', {PARAMETERS_KEY: ('Slope',
                                  '',
                                  '',
                                  '',
                                  '',
                                  '',
                                  '',
                                  '')}))),
 'Erosion': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Mode',
                                'Frequency',
                                use('').if_parameter('Mode').has_value('Sine').else_use('Width'),
                                'Amount',
                                '',
                                '',
                                '',
                                '')}),)),
 'ProxyAudioEffectDevice': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Input Gain',
                                               'Output Gain',
                                               'Dry/Wet',
                                               '',
                                               '',
                                               '',
                                               '',
                                               '')}),)),
 'FilterDelay': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('2 Filter Freq').if_parameter('2 Input On').has_value('on'),
                                    use('2 Filter Width').if_parameter('2 Input On').has_value('on'),
                                    use('2 Delay Mode').if_parameter('2 Input On').has_value('on'),
                                    use('').if_parameter('2 Input On').has_value('off').else_use('2 Time Delay').if_parameter('2 Delay Mode').has_value('off').else_use('2 Beat Delay'),
                                    use('2 Feedback').if_parameter('2 Input On').has_value('on'),
                                    use('1 Volume').if_parameter('1 Input On').has_value('on').else_use('2 Pan'),
                                    use('2 Volume').if_parameter('2 Input On').has_value('on'),
                                    use('3 Volume').if_parameter('3 Input On').has_value('on').else_use('Dry'))}),
                 ('L Filter', {PARAMETERS_KEY: ('1 Input On',
                                    use('1 Filter Freq').if_parameter('1 Input On').has_value('on'),
                                    use('1 Filter Width').if_parameter('1 Input On').has_value('on'),
                                    use('1 Feedback').if_parameter('1 Input On').has_value('on'),
                                    use('1 Delay Mode').if_parameter('1 Input On').has_value('on'),
                                    use('').if_parameter('1 Input On').has_value('off').else_use('1 Time Delay').if_parameter('1 Delay Mode').has_value('off').else_use('1 Beat Delay'),
                                    use('').if_parameter('1 Input On').has_value('off').else_use('1 Beat Swing').if_parameter('1 Delay Mode').has_value('on').else_use(''),
                                    use('1 Volume').if_parameter('1 Input On').has_value('off'))}),
                 ('L+R Filter', {PARAMETERS_KEY: ('2 Input On',
                                    use('2 Filter Freq').if_parameter('2 Input On').has_value('on'),
                                    use('2 Filter Width').if_parameter('2 Input On').has_value('on'),
                                    use('2 Feedback').if_parameter('2 Input On').has_value('on'),
                                    use('2 Delay Mode').if_parameter('2 Input On').has_value('on'),
                                    use('').if_parameter('2 Input On').has_value('off').else_use('2 Time Delay').if_parameter('2 Delay Mode').has_value('off').else_use('2 Beat Delay'),
                                    use('').if_parameter('2 Input On').has_value('off').else_use('2 Beat Swing').if_parameter('2 Delay Mode').has_value('on').else_use(''),
                                    use('2 Volume').if_parameter('2 Input On').has_value('on'))}),
                 ('R Filter', {PARAMETERS_KEY: ('3 Input On',
                                    use('3 Filter Freq').if_parameter('3 Input On').has_value('on'),
                                    use('3 Filter Width').if_parameter('3 Input On').has_value('on'),
                                    use('3 Feedback').if_parameter('3 Input On').has_value('on'),
                                    use('3 Delay Mode').if_parameter('3 Input On').has_value('on'),
                                    use('').if_parameter('3 Input On').has_value('off').else_use('3 Time Delay').if_parameter('3 Delay Mode').has_value('off').else_use('3 Beat Delay'),
                                    use('').if_parameter('3 Input On').has_value('off').else_use('3 Beat Swing').if_parameter('3 Delay Mode').has_value('on').else_use(''),
                                    use('3 Volume').if_parameter('3 Input On').has_value('on'))}),
                 ('Mix', {PARAMETERS_KEY: (use('1 Pan').if_parameter('1 Input On').has_value('on'),
                                    use('2 Pan').if_parameter('2 Input On').has_value('on'),
                                    use('3 Pan').if_parameter('3 Input On').has_value('on'),
                                    '',
                                    use('1 Volume').if_parameter('1 Input On').has_value('on'),
                                    use('2 Volume').if_parameter('2 Input On').has_value('on'),
                                    use('3 Volume').if_parameter('3 Input On').has_value('on'),
                                    'Dry')}))),
 'Flanger': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('LFO Amount',
                                'Sync',
                                use('Frequency').if_parameter('Sync').has_value('Free').else_use('Sync Rate'),
                                'Delay Time',
                                'Hi Pass',
                                'Env. Modulation',
                                'Feedback',
                                'Dry/Wet')}), ('Envelope', {PARAMETERS_KEY: ('Env. Attack',
                                'Env. Release',
                                'Env. Modulation',
                                'Hi Pass',
                                'Delay Time',
                                'Feedback',
                                'Polarity',
                                'Dry/Wet')}), ('LFO / S&H', {PARAMETERS_KEY: ('LFO Amount',
                                'LFO Waveform',
                                'Sync',
                                use('Frequency').if_parameter('Sync').has_value('Free').else_use('Sync Rate'),
                                use('').if_parameter('LFO Waveform').has_value('S&H Width').else_use('LFO Stereo Mode').if_parameter('Sync').has_value('Free').else_use('LFO Offset'),
                                use('LFO Width (Random)').if_parameter('LFO Waveform').has_value('S&H Width').else_use('LFO Phase').if_parameter('Sync').has_value('Sync').else_use('LFO Phase').if_parameter('LFO Stereo Mode').has_value('Phase').else_use('LFO Spin'),
                                '',
                                '')}))),
 'FrequencyShifter': IndexedDict((('FreqDrive', {PARAMETERS_KEY: ('Mode',
                                         use('Ring Mod Frequency').if_parameter('Mode').has_value('Ring Modulation').else_use('Coarse'),
                                         'Wide',
                                         'Fine',
                                         use('Drive On/Off').if_parameter('Mode').has_value('Ring Modulation'),
                                         use('Drive').if_parameter('Drive On/Off').has_value('on').and_parameter('Mode').has_value('Ring Modulation'),
                                         'LFO Amount',
                                         'Dry/Wet')}), ('LFO / S&H', {PARAMETERS_KEY: ('LFO Amount',
                                         'LFO Waveform',
                                         'Sync',
                                         use('LFO Frequency').if_parameter('Sync').has_value('Free').else_use('Sync Rate'),
                                         use('').if_parameter('LFO Waveform').has_value('S&H Width').else_use('LFO Stereo Mode').if_parameter('Sync').has_value('Free').else_use('LFO Offset'),
                                         use('LFO Width (Random)').if_parameter('LFO Waveform').has_value('S&H Width').else_use('LFO Phase').if_parameter('Sync').has_value('Sync').else_use('LFO Phase').if_parameter('LFO Stereo Mode').has_value('Phase').else_use('LFO Spin'),
                                         '',
                                         '')}))),
 'Gate': IndexedDict((('Gate', {PARAMETERS_KEY: ('Threshold',
                             'Return',
                             'FlipMode',
                             'LookAhead',
                             'Attack',
                             'Hold',
                             'Release',
                             'Floor')}), ('Sidechain', {PARAMETERS_KEY: ('Ext. In On',
                             use('Ext. In Gain').if_parameter('Ext. In On').has_value('on'),
                             use('Ext. In Mix').if_parameter('Ext. In On').has_value('on'),
                             'Side Listen',
                             'EQ On',
                             use('EQ Mode').if_parameter('EQ On').has_value('on'),
                             use('EQ Freq').if_parameter('EQ On').has_value('on'),
                             use('').if_parameter('EQ On').has_value('off').else_use('EQ Gain').if_parameter('EQ Mode').has_value('Low Shelf').else_use('EQ Gain').if_parameter('EQ Mode').has_value('High Shelf').else_use('EQ Gain').if_parameter('EQ Mode').has_value('Bell').else_use('EQ Q'))}))),
 'GlueCompressor': IndexedDict((('Compression', {PARAMETERS_KEY: ('Threshold',
                                       'Ratio',
                                       'Attack',
                                       'Release',
                                       'Peak Clip In',
                                       'Range',
                                       'Makeup',
                                       'Dry/Wet')}), ('Sidechain', {PARAMETERS_KEY: ('Ext. In On',
                                       use('Ext. In Gain').if_parameter('Ext. In On').has_value('on'),
                                       use('Ext. In Mix').if_parameter('Ext. In On').has_value('on'),
                                       '',
                                       'EQ On',
                                       use('EQ Mode').if_parameter('EQ On').has_value('on'),
                                       use('EQ Freq').if_parameter('EQ On').has_value('on'),
                                       use('').if_parameter('EQ On').has_value('off').else_use('EQ Gain').if_parameter('EQ Mode').has_value('Low Shelf').else_use('EQ Gain').if_parameter('EQ Mode').has_value('High Shelf').else_use('EQ Gain').if_parameter('EQ Mode').has_value('Bell').else_use('EQ Q'))}))),
 'GrainDelay': IndexedDict((('Pitch', {PARAMETERS_KEY: ('Frequency',
                                   'Pitch',
                                   'Delay Mode',
                                   use('Time Delay').if_parameter('Delay Mode').has_value('off').else_use('Beat Delay'),
                                   'Random',
                                   'Spray',
                                   'Feedback',
                                   'DryWet')}), ('Time', {PARAMETERS_KEY: ('Delay Mode',
                                   use('Time Delay').if_parameter('Delay Mode').has_value('off').else_use('Beat Delay'),
                                   'Beat Swing',
                                   'Feedback',
                                   '',
                                   '',
                                   '',
                                   'DryWet')}))),
 'Limiter': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Gain',
                                'Ceiling',
                                'Link Channels',
                                'Lookahead',
                                'Auto',
                                use('Release time').if_parameter('Auto').has_value('off'),
                                '',
                                '')}),)),
 'Looper': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('State',
                               'Speed',
                               'Reverse',
                               'Quantization',
                               'Monitor',
                               'Song Control',
                               'Tempo Control',
                               'Feedback')}),)),
 'MultibandDynamics': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Above Threshold (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Above Ratio (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Above Threshold (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Above Ratio (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Above Threshold (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Above Ratio (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          'Master Output',
                                          'Amount')}),
                       ('Low Band', {PARAMETERS_KEY: ('Band Activator (Low)',
                                          use('Input Gain (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Below Threshold (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Below Ratio (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Above Threshold (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Above Ratio (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Attack Time (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          use('Release Time (Low)').if_parameter('Band Activator (Low)').has_value('on'))}),
                       ('Mid Band', {PARAMETERS_KEY: ('Band Activator (Mid)',
                                          use('Input Gain (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Below Threshold (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Below Ratio (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Above Threshold (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Above Ratio (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Attack Time (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          use('Release Time (Mid)').if_parameter('Band Activator (Mid)').has_value('on'))}),
                       ('High Band', {PARAMETERS_KEY: ('Band Activator (High)',
                                          use('Input Gain (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Below Threshold (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Below Ratio (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Above Threshold (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Above Ratio (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Attack Time (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          use('Release Time (High)').if_parameter('Band Activator (High)').has_value('on'))}),
                       ('Mix & Split', {PARAMETERS_KEY: (use('Output Gain (Low)').if_parameter('Band Activator (Low)').has_value('on'),
                                          'Low-Mid Crossover',
                                          use('Output Gain (Mid)').if_parameter('Band Activator (Mid)').has_value('on'),
                                          'Mid-High Crossover',
                                          use('Output Gain (High)').if_parameter('Band Activator (High)').has_value('on'),
                                          'Peak/RMS Mode',
                                          'Amount',
                                          'Master Output')}),
                       ('Sidechain', {PARAMETERS_KEY: ('Ext. In On',
                                          use('Ext. In Mix').if_parameter('Ext. In On').has_value('on'),
                                          use('Ext. In Gain').if_parameter('Ext. In On').has_value('on'),
                                          '',
                                          'Time Scaling',
                                          'Soft Knee On/Off',
                                          '',
                                          '')}))),
 'Overdrive': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Filter Freq',
                                  'Filter Width',
                                  'Drive',
                                  'Tone',
                                  'Preserve Dynamics',
                                  '',
                                  '',
                                  'Dry/Wet')}),)),
 'Phaser': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Poles',
                               'Frequency',
                               'Feedback',
                               'Env. Modulation',
                               'LFO Amount',
                               'LFO Sync',
                               use('LFO Frequency').if_parameter('LFO Sync').has_value('Free').else_use('LFO Sync Rate'),
                               'Dry/Wet')}), ('Envelope', {PARAMETERS_KEY: ('Poles',
                               'Type',
                               use('').if_parameter('Type').has_value('Space').else_use('Color'),
                               'Frequency',
                               'Feedback',
                               'Env. Modulation',
                               'Env. Attack',
                               'Env. Release')}), ('LFO', {PARAMETERS_KEY: ('LFO Amount',
                               'LFO Waveform',
                               'LFO Sync',
                               use('LFO Frequency').if_parameter('LFO Sync').has_value('Free').else_use('LFO Sync Rate'),
                               use('').if_parameter('LFO Waveform').has_value('S&H Width').else_use('LFO Stereo Mode').if_parameter('LFO Sync').has_value('Free').else_use('LFO Offset'),
                               use('LFO Width (Random)').if_parameter('LFO Waveform').has_value('S&H Width').else_use('LFO Phase').if_parameter('LFO Sync').has_value('Sync').else_use('LFO Phase').if_parameter('LFO Stereo Mode').has_value('Phase').else_use('LFO Spin'),
                               '',
                               '')}))),
 'PingPongDelay': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Delay Mode',
                                      use('Beat Delay').if_parameter('Delay Mode').has_value('Sync').else_use('Time Delay'),
                                      use('Beat Swing').if_parameter('Delay Mode').has_value('Sync').else_use(''),
                                      'Freeze',
                                      'Filter Freq',
                                      'Filter Width',
                                      'Feedback',
                                      'Dry/Wet')}),)),
 'Redux': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Bit On',
                              use('Bit Depth').if_parameter('Bit On').has_value('on'),
                              'Sample Mode',
                              use('Sample Hard').if_parameter('Sample Mode').has_value('Hard').else_use('Sample Soft'),
                              '',
                              '',
                              '',
                              '')}),)),
 'Resonator': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: (use('Frequency').if_parameter('Filter On').has_value('on'),
                                  'Decay',
                                  'Color',
                                  use('I Gain').if_parameter('I On').has_value('on'),
                                  use('II Gain').if_parameter('II On').has_value('on'),
                                  use('III Gain').if_parameter('III On').has_value('on'),
                                  'Width',
                                  'Dry/Wet')}),
               ('Global', {PARAMETERS_KEY: ('Mode',
                                  'Decay',
                                  'Const',
                                  'Color',
                                  '',
                                  'Width',
                                  'Global Gain',
                                  'Dry/Wet')}),
               ('Filter', {PARAMETERS_KEY: ('Filter On',
                                  use('Frequency').if_parameter('Filter On').has_value('on'),
                                  use('Filter Type').if_parameter('Filter On').has_value('on'),
                                  '',
                                  '',
                                  '',
                                  '',
                                  '')}),
               ('Mode I & II', {PARAMETERS_KEY: ('I On',
                                  use('I Note').if_parameter('I On').has_value('on'),
                                  use('I Tune').if_parameter('I On').has_value('on'),
                                  use('I Gain').if_parameter('I On').has_value('on'),
                                  'II On',
                                  use('II Pitch').if_parameter('II On').has_value('on'),
                                  use('II Tune').if_parameter('II On').has_value('on'),
                                  use('II Gain').if_parameter('II On').has_value('on'))}),
               ('Mode III & IV', {PARAMETERS_KEY: ('III On',
                                  use('III Pitch').if_parameter('III On').has_value('on'),
                                  use('III Tune').if_parameter('III On').has_value('on'),
                                  use('III Gain').if_parameter('III On').has_value('on'),
                                  'IV On',
                                  use('IV Pitch').if_parameter('IV On').has_value('on'),
                                  use('IV Tune').if_parameter('IV On').has_value('on'),
                                  use('IV Gain').if_parameter('IV On').has_value('on'))}),
               ('Mode V', {PARAMETERS_KEY: ('V On',
                                  use('V Pitch').if_parameter('V On').has_value('on'),
                                  use('V Tune').if_parameter('V On').has_value('on'),
                                  use('V Gain').if_parameter('V On').has_value('on'),
                                  '',
                                  '',
                                  '',
                                  '')}),
               ('Mix', {PARAMETERS_KEY: (use('I Gain').if_parameter('I On').has_value('on'),
                                  use('II Gain').if_parameter('II On').has_value('on'),
                                  use('III Gain').if_parameter('III On').has_value('on'),
                                  use('IV Gain').if_parameter('IV On').has_value('on'),
                                  use('V Gain').if_parameter('V On').has_value('on'),
                                  '',
                                  '',
                                  '')}),
               ('Pitch', {PARAMETERS_KEY: (use('I Note').if_parameter('I On').has_value('on'),
                                  use('II Pitch').if_parameter('II On').has_value('on'),
                                  use('III Pitch').if_parameter('III On').has_value('on'),
                                  use('IV Pitch').if_parameter('IV On').has_value('on'),
                                  use('V Pitch').if_parameter('V On').has_value('on'),
                                  '',
                                  '',
                                  '')}))),
 'Reverb': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('PreDelay',
                               use('In Filter Freq').if_parameter('In LowCut On').has_value('on').else_use('ER Shape').if_parameter('In HighCut On').has_value('off').else_use('In Filter Freq'),
                               use('Chorus Amount').if_parameter('Chorus On').has_value('on').else_use('ER Level'),
                               'Stereo Image',
                               'Room Size',
                               'DecayTime',
                               use('HiShelf Gain').if_parameter('HiShelf On').has_value('on').else_use('Diffuse Level'),
                               'Dry/Wet')}),
            ('Global', {PARAMETERS_KEY: ('Chorus On',
                               use('Chorus Rate').if_parameter('Chorus On').has_value('on'),
                               use('Chorus Amount').if_parameter('Chorus On').has_value('on'),
                               'Quality',
                               'Freeze On',
                               'Flat On',
                               'ER Level',
                               'Diffuse Level')}),
            ('Diffusion Network', {PARAMETERS_KEY: ('HiShelf On',
                               use('HiShelf Freq').if_parameter('HiShelf On').has_value('on'),
                               use('HiShelf Gain').if_parameter('HiShelf On').has_value('on'),
                               'LowShelf On',
                               use('LowShelf Freq').if_parameter('LowShelf On').has_value('on'),
                               use('LowShelf Gain').if_parameter('LowShelf On').has_value('on'),
                               'Density',
                               'Scale')}),
            ('Input/Reflections', {PARAMETERS_KEY: ('In LowCut On',
                               'In HighCut On',
                               use('In Filter Freq').if_parameter('In LowCut On').has_value('on').else_use('').if_parameter('In HighCut On').has_value('off').else_use('In Filter Freq'),
                               use('In Filter Width').if_parameter('In LowCut On').has_value('on').else_use('').if_parameter('In HighCut On').has_value('off').else_use('In Filter Width'),
                               'ER Spin On',
                               use('ER Spin Rate').if_parameter('ER Spin On').has_value('on'),
                               use('ER Spin Amount').if_parameter('ER Spin On').has_value('on'),
                               'ER Shape')}))),
 'Saturator': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Drive',
                                  'Type',
                                  'Color',
                                  use('Base').if_parameter('Color').has_value('on'),
                                  use('Frequency').if_parameter('Color').has_value('on'),
                                  use('Width').if_parameter('Color').has_value('on'),
                                  use('Depth').if_parameter('Color').has_value('on'),
                                  'Output')}), ('Waveshaper', {PARAMETERS_KEY: ('Type',
                                  use('WS Drive').if_parameter('Type').has_value('Waveshaper'),
                                  use('WS Curve').if_parameter('Type').has_value('Waveshaper'),
                                  use('WS Depth').if_parameter('Type').has_value('Waveshaper'),
                                  use('WS Lin').if_parameter('Type').has_value('Waveshaper'),
                                  use('WS Damp').if_parameter('Type').has_value('Waveshaper'),
                                  use('WS Period').if_parameter('Type').has_value('Waveshaper'),
                                  'Dry/Wet')}), ('Output', {PARAMETERS_KEY: ('',
                                  '',
                                  '',
                                  '',
                                  '',
                                  'Soft Clip',
                                  'Output',
                                  'Dry/Wet')}))),
 'CrossDelay': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('L Delay Mode',
                                   use('L Beat Delay').if_parameter('L Delay Mode').has_value('on').else_use('L Time Delay'),
                                   use('L Beat Swing').if_parameter('L Delay Mode').has_value('on'),
                                   use('R Delay Mode').if_parameter('Link On').has_value('off'),
                                   use('').if_parameter('Link On').has_value('on').else_use('R Beat Delay').if_parameter('R Delay Mode').has_value('on').else_use('R Time Delay'),
                                   use('').if_parameter('Link On').has_value('on').else_use('R Beat Swing').if_parameter('R Delay Mode').has_value('on').else_use(''),
                                   'Feedback',
                                   'Dry/Wet')}), ('Global', {PARAMETERS_KEY: ('',
                                   '',
                                   '',
                                   '',
                                   '',
                                   'Link On',
                                   'Feedback',
                                   'Dry/Wet')}))),
 'StereoGain': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Mute',
                                   use('BlockDc').if_parameter('Mute').has_value('off'),
                                   use('PhaseInvertL').if_parameter('Mute').has_value('off'),
                                   use('PhaseInvertR').if_parameter('Mute').has_value('off'),
                                   use('Signal Source').if_parameter('Mute').has_value('off'),
                                   use('Panorama').if_parameter('Mute').has_value('off'),
                                   use('').if_parameter('Mute').has_value('on').else_use('').if_parameter('Signal Source').has_value('Left').else_use('').if_parameter('Signal Source').has_value('Right').else_use('StereoSeparation'),
                                   use('Gain').if_parameter('Mute').has_value('off'))}),)),
 'Vinyl': IndexedDict((('Global', {PARAMETERS_KEY: ('Tracing On',
                              use('Tracing Drive').if_parameter('Tracing On').has_value('on'),
                              use('Tracing Freq.').if_parameter('Tracing On').has_value('on'),
                              use('Tracing Width').if_parameter('Tracing On').has_value('on'),
                              'Pinch On',
                              'Global Drive',
                              'Crackle Density',
                              'Crackle Volume')}), ('Pinch', {PARAMETERS_KEY: ('Pinch On',
                              use('Pinch Soft On').if_parameter('Pinch On').has_value('on'),
                              use('Pinch Mono On').if_parameter('Pinch On').has_value('on'),
                              use('Pinch Width').if_parameter('Pinch On').has_value('on'),
                              use('Pinch Drive').if_parameter('Pinch On').has_value('on'),
                              use('Pinch Freq.').if_parameter('Pinch On').has_value('on'),
                              'Crackle Density',
                              'Crackle Volume')}))),
 'Vocoder': IndexedDict(((MAIN_KEY, {PARAMETERS_KEY: ('Formant Shift',
                                'Attack Time',
                                'Release Time',
                                'Unvoiced Level',
                                'Gate Threshold',
                                'Filter Bandwidth',
                                'Envelope Depth',
                                'Dry/Wet')}),
             ('Carrier', {PARAMETERS_KEY: ('Noise Rate',
                                'Noise Crackle',
                                'Upper Pitch Detection',
                                'Lower Pitch Detection',
                                'Oscillator Pitch',
                                'Oscillator Waveform',
                                '',
                                '')}),
             ('Global', {PARAMETERS_KEY: ('Formant Shift',
                                'Attack Time',
                                'Release Time',
                                'Mono/Stereo',
                                'Output Level',
                                'Gate Threshold',
                                'Envelope Depth',
                                'Dry/Wet')}),
             ('Filters/Voicing', {PARAMETERS_KEY: ('Filter Bandwidth',
                                'Upper Filter Band',
                                'Lower Filter Band',
                                'Precise/Retro',
                                'Unvoiced Level',
                                'Unvoiced Sensitivity',
                                'Unvoiced Speed',
                                'Enhance')})))}
PARAMETERS_BLACKLIST_FOR_CPP_SANITY_CHECK = {'OriginalSimpler': ('Start',
                     'End',
                     'Sensitivity',
                     'Mode',
                     'Playback',
                     'Pad Slicing',
                     'Multi Sample',
                     'Warp',
                     'Warp Mode',
                     'Voices',
                     'Preserve',
                     'Loop Mode',
                     'Envelope',
                     'Grain Size Tones',
                     'Grain Size Texture',
                     'Flux',
                     'Formants',
                     'Envelope Complex Pro',
                     'Gain')}